{
    "swagger": "2.0",
    "info": {
        "version": "2.0.0",
        "title": "BlackJet - Users APIs",
        "description": {
            "$ref": "swaggerTableOfContents.json#/table_of_contents"
        }
    },
    "host": "",
    "basePath": "/",
    "schemes": [],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/api/v2/user/login": {
            "post": {
                "tags": [
                    "Users Auth"
                ],
                "summary": "Register/Login API",
                "description": "This API is utilized for user registration, allowing users to provide either their phone number or email as parameters. Alternatively, users can log in using their phone number or email. If an account already exists, the API will redirect to the main homepage after login. If an account doesnâ€™t exist, the API facilitates account creation.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Register/Login",
                        "schema": {
                            "$ref": "#/components/Login"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully logged in."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/loginWithToken": {
            "post": {
                "tags": [
                    "Users Auth"
                ],
                "summary": "Register/Login API with Token",
                "description": "This API is for the second page after the login API. The parameters are the same as the login API, but an auth token is added to this API.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Register/Login",
                        "schema": {
                            "$ref": "#/components/Login"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully logged in."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/addEmail": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Add Email API",
                "description": "Add Email API.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "email",
                        "schema": {
                            "$ref": "#/components/AddEmail"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Email Added Successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/getPlansAndPricing": {
            "get": {
                "tags": [
                    "Users Auth"
                ],
                "summary": "Membership Plans and Pricing API",
                "description": "For getting membership plans and pricing API.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data Fetched Successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/resendOtp": {
            "get": {
                "tags": [
                    "Users Auth"
                ],
                "summary": "Resend OTP API",
                "description": "For sending OTP to users phone number through Twilio API.",
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OTP sent successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/searchIndustries": {
            "get": {
                "tags": [
                    "Users Auth"
                ],
                "summary": "Search Industries API",
                "description": "For searching the industries using search parameter.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "description": "required",
                        "schema": {
                            "$ref": "#/components/Search"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data Fetched Successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/verifyOtp": {
            "post": {
                "tags": [
                    "Users Auth"
                ],
                "summary": "Verify OTP API",
                "description": "For verifying the OTP and storing the firebase device token.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "OTP and Firebase Device Token is required",
                        "schema": {
                            "$ref": "#/components/VerifyOTP"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Otp verified successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/addInformation": {
            "post": {
                "tags": [
                    "Users Auth"
                ],
                "summary": "Add Users Information API",
                "description": "For adding users preferred first name, date of birth, full name and gender.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Preferred first name is optional. Full name, gender and date of birth is required.",
                        "schema": {
                            "$ref": "#/components/AddInformation"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Information Added Successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/completionOfRegistration": {
            "post": {
                "tags": [
                    "Users Auth"
                ],
                "summary": "Add Users Profession Details API",
                "description": "For adding users occupation, annual income and industries.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "All parameters are optional.",
                        "schema": {
                            "$ref": "#/components/CompletionOfRegistration"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data Added Successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/logout": {
            "get": {
                "tags": [
                    "Users Auth"
                ],
                "summary": "Logout API",
                "description": "Logout API.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Logout successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/signupcomplete": {
            "post": {
                "tags": [
                    "Users Auth"
                ],
                "summary": "Signup Complete API",
                "description": "This API is in use for Blackjet website Onboarding Flow.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "All parameters are optional.",
                        "schema": {
                            "$ref": "#/components/CompletionOfRegistration"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Message Send Successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/update_phone": {
            "put": {
                "tags": [
                    "Profile"
                ],
                "summary": "Update Phone API",
                "description": "In this API, users phone number gets updated after OTP verification.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/update_phone"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Phone Added Successfully! || OTP sent successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/updateName": {
            "put": {
                "tags": [
                    "Profile"
                ],
                "summary": "Update Name API",
                "description": "In this API, users legal full name or preferred name is updated.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/updateName"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Name Updated Successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/emailVerification": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Email Verification API",
                "description": "Send Email Verification API.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "$ref": "#/components/userId"
                        }
                    },
                    {
                        "in": "query",
                        "name": "email",
                        "schema": {
                            "$ref": "#/components/email"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "HTML response"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/getUserProfile": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Get User Profile API",
                "description": "Get User Profile API.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data Fetched Successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/sendCodeToEmail": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Send Code To Email API",
                "description": "Send Code To Email API.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OTP sent successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/editEmail": {
            "put": {
                "tags": [
                    "Profile"
                ],
                "summary": "Edit Email API",
                "description": "Edit Email after OTP verification API.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/editEmail"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Email Updated Successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/resendEmailVerification": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Resend Email Verification API",
                "description": "Resend Email Verification API.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Verification Link sent successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/updateProfilePic": {
            "put": {
                "tags": [
                    "Profile"
                ],
                "summary": "Update Profile Pic API",
                "description": "Update Profile Pic API.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "formData",
                        "name": "image",
                        "description": "Image file to upload",
                        "required": true,
                        "type": "file"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated profile photo."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/uploadProofOfAge": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Upload Proof Of Age API",
                "description": "Upload Proof Of Age API.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "formData",
                        "name": "image",
                        "description": "Image file to upload",
                        "required": true,
                        "type": "file"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully uploaded proof of age."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/uploadPhotoOfInfant": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Upload Photo Of Infant API ",
                "description": "Upload Photo Of Infant API.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "formData",
                        "name": "image",
                        "description": "Image file to upload",
                        "required": true,
                        "type": "file"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully uploaded photo of infant."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/upload_acceptance_animal_proof": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Upload Acceptance Animal Proof API",
                "description": "Upload Acceptance Animal Proof API.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "formData",
                        "name": "image",
                        "description": "Image file to upload",
                        "required": true,
                        "type": "file"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully uploaded Acceptance animal proof."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/upload_pet_profile_pic": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Upload Pet Profile Pic API",
                "description": "Upload Pet Profile Pic API.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "formData",
                        "name": "image",
                        "description": "Image file to upload",
                        "required": true,
                        "type": "file"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully uploaded pet profile pic."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/addSpecialNeedsAndConditions": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Add Special Needs And Conditions API",
                "description": "add special needs and conditions, update as well if user already added the needs and conditions API.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/addSpecialNeedsAndConditions"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data Added Successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/getSpecialNeedsAndConditions": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Get Special Needs And Conditions API",
                "description": "Get special needs and conditions API.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data Fetched Successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/editDOB": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Edit DOB API",
                "description": "Edit DOB API.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "DOB",
                        "schema": {
                            "$ref": "#/components/DOB"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "DOB updated successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/userVerifications": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "User Verifications API",
                "description": "User upload the documents for verifications and submitted and store the documents in the database API.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "formData",
                        "name": "document-front",
                        "description": "Image file to upload",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "in": "formData",
                        "name": "document-back",
                        "description": "Image file to upload",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "in": "formData",
                        "name": "face",
                        "description": "Image file to upload",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "in": "formData",
                        "name": "type",
                        "description": "PASSPORT/DRIVERS_LICENSE",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Your verification data has been successfully submitted, and you will get the results shortly."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/veriffWebhookURL": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Veriff Webhook URL API",
                "description": "Veriff Webhook URL API.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-auth-client",
                        "description": "x-auth-client",
                        "schema": {
                            "$ref": "#/components/veriff"
                        }
                    },
                    {
                        "in": "header",
                        "name": "x-signature",
                        "description": "x-signature",
                        "schema": {
                            "$ref": "#/components/veriff"
                        }
                    },
                    {
                        "in": "header",
                        "name": "x-hmac-signature",
                        "description": "x-hmac-signature",
                        "schema": {
                            "$ref": "#/components/veriff"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/veriffWebhook"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Your are verified. || Your verification data has been resubmitted requested."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/softDeleteAccount": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Soft Delete Account API",
                "description": "Soft Delete Account API.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Account Deleted successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/AddIndustriesMaster": {
            "post": {
                "tags": [
                    "Master Data"
                ],
                "summary": "AddIndustriesMaster API",
                "description": "AddIndustriesMaster API.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data Added Successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/UpdateIndustriesMaster": {
            "put": {
                "tags": [
                    "Master Data"
                ],
                "summary": "UpdateIndustriesMaster API",
                "description": "UpdateIndustriesMaster API.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data Updated Successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/UpdatePetsMaster": {
            "put": {
                "tags": [
                    "Master Data"
                ],
                "summary": "UpdatePetsMaster API",
                "description": "UpdatePetsMaster API.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data Updated Successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/addpetsMasterData": {
            "post": {
                "tags": [
                    "Master Data"
                ],
                "summary": "addpetsMasterData API",
                "description": "addpetsMasterData API.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data Added Successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/getMembership": {
            "get": {
                "tags": [
                    "Membership"
                ],
                "summary": "getMembership API",
                "description": "getMembership API.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data Fetched Successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/AddMembership": {
            "post": {
                "tags": [
                    "Membership"
                ],
                "summary": "Add Membership API",
                "description": "Add Membership API.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/AddMembership"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data Added Successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/getUserMembership": {
            "get": {
                "tags": [
                    "Membership"
                ],
                "summary": "Get User Membership API",
                "description": "Get User Membership API.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data Fetched Successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/upgradeMembership": {
            "get": {
                "tags": [
                    "Membership"
                ],
                "summary": "Get Upgrade Membership API",
                "description": "Showing the upgraded membership details for upgradation.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data Fetched Successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/confirmUpgradeAndPurchase": {
            "post": {
                "tags": [
                    "Membership"
                ],
                "summary": "Confirm Upgrade And Purchase API",
                "description": "Confirm Upgrade And Purchase.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/confirmUpgradeAndPurchase"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Your membership is revoked! || Membership upgraded Successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/downgradeMembership": {
            "post": {
                "tags": [
                    "Membership"
                ],
                "summary": "Downgrade Membership API",
                "description": "Downgrade Membership.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/downgradeMembership"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Membership downgraded Successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/cancelMembership": {
            "post": {
                "tags": [
                    "Membership"
                ],
                "summary": "Cancel Membership",
                "description": "Cancel Membership.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/cancelMembership"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Status updated successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/changeRenewalDay": {
            "post": {
                "tags": [
                    "Membership"
                ],
                "summary": "Change Renewal Day API",
                "description": "Change Renewal Day of User Membership, showing the changed price and details of changed membership data.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/changeRenewalDay"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Renewal day changes successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/changeRenewalDayConfirmPay": {
            "post": {
                "tags": [
                    "Membership"
                ],
                "summary": "Change Renewal Day Confirm Pay API",
                "description": "Confirm the changes of renewal day and Pay API.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/changeRenewalDayConfirmPay"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Additional charges paid successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/terminateMembership": {
            "post": {
                "tags": [
                    "Membership"
                ],
                "summary": "Terminate Membership API",
                "description": "Terminate Membership API.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/terminateMembership"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Membership terminated successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/autoRenew": {
            "get": {
                "tags": [
                    "Membership"
                ],
                "summary": "Auto Renew API",
                "description": "Sets the Auto Renew to Users Membership API.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Auto renew sets successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/renewMembership": {
            "get": {
                "tags": [
                    "Membership"
                ],
                "summary": "Renew Membership API",
                "description": "Renew the membership API.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Renew membership successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/activate_membership": {
            "get": {
                "tags": [
                    "Membership"
                ],
                "summary": "Activate Membership API",
                "description": "Activate Membership API.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Membership activated successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/homePage": {
            "get": {
                "tags": [
                    "Home"
                ],
                "summary": "Home API",
                "description": "This API is not using in latest build(Instead of this v2 of this API is using).",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data Fetched Successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/homePagev2": {
            "get": {
                "tags": [
                    "Home"
                ],
                "summary": "Home API",
                "description": "In this API, User's latest Booking shows which are in the range of 24 hours and all the cards and items which admin has added also showing.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data Fetched Successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/updateSafetyVideoWatchStatus": {
            "put": {
                "tags": [
                    "Home"
                ],
                "summary": "Update Safety Video Watch Status API",
                "description": "Update Safety Video Watch Status.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/updateSafetyVideoWatchStatus"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data Updated Successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/check_booking_status": {
            "get": {
                "tags": [
                    "Home"
                ],
                "summary": "Check Booking Status API",
                "description": "Check Booking Status.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "booking_id",
                        "schema": {
                            "$ref": "#/components/check_booking_status"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data fetched successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/show_profile": {
            "get": {
                "tags": [
                    "Home"
                ],
                "summary": "Show Profile API",
                "description": "Show Profile to other Member or not by show_profile parameter.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_show",
                        "description": "Required(Either 'yes' or 'no')",
                        "schema": {
                            "$ref": "#/components/show_profile"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data updated successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/snooze": {
            "get": {
                "tags": [
                    "Home"
                ],
                "summary": "Snooze API",
                "description": "Snooze for 1 hour, 24 hour or Delete Forever API(All the parameters are optional).",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "snooze_for_1hr",
                        "description": "Either 'yes' or 'no'",
                        "schema": {
                            "$ref": "#/components/snooze_for_1hr"
                        }
                    },
                    {
                        "in": "query",
                        "name": "snooze_for_24hr",
                        "description": "Either 'yes' or 'no'",
                        "schema": {
                            "$ref": "#/components/snooze_for_24hr"
                        }
                    },
                    {
                        "in": "query",
                        "name": "delete_forever",
                        "description": "Either 'yes' or 'no'",
                        "schema": {
                            "$ref": "#/components/delete_forever"
                        }
                    },
                    {
                        "in": "query",
                        "name": "membership_id",
                        "schema": {
                            "$ref": "#/components/membership_id"
                        }
                    },
                    {
                        "in": "query",
                        "name": "payment_id",
                        "schema": {
                            "$ref": "#/components/payment_id"
                        }
                    },
                    {
                        "in": "query",
                        "name": "boutique_id",
                        "schema": {
                            "$ref": "#/components/boutique_id"
                        }
                    },
                    {
                        "in": "query",
                        "name": "announcement_id",
                        "schema": {
                            "$ref": "#/components/announcement_id"
                        }
                    },
                    {
                        "in": "query",
                        "name": "survey_id",
                        "schema": {
                            "$ref": "#/components/survey_id"
                        }
                    },
                    {
                        "in": "query",
                        "name": "show_profile_card",
                        "description": "Either 'yes' or 'no'",
                        "schema": {
                            "$ref": "#/components/show_profile_card"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Snoozed successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/submitSurvey": {
            "post": {
                "tags": [
                    "Home"
                ],
                "summary": "Submit Survey API",
                "description": "Submit Survey.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/submitSurvey"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Survey submitted Successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/addPayment": {
            "post": {
                "tags": [
                    "Payment"
                ],
                "summary": "Add Card Payment Details API",
                "description": "User adding card details.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/addPayment"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data Added Successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/getPaymentMethod": {
            "get": {
                "tags": [
                    "Payment"
                ],
                "summary": "Get Payment Methods API",
                "description": "Get Payment Methods.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data Fetched Successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/getUsersPaymentListing": {
            "get": {
                "tags": [
                    "Payment"
                ],
                "summary": "Get Users Payment Listing API",
                "description": "Get Users Payment Listing.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data Fetched Successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/makePaymentActive": {
            "get": {
                "tags": [
                    "Payment"
                ],
                "summary": "Make Payment Active API",
                "description": "Make Payment Active.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "description": "Payment Id",
                        "schema": {
                            "$ref": "#/components/id"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Payment status activated successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/getUserTransaction": {
            "get": {
                "tags": [
                    "Payment"
                ],
                "summary": "Get User Transaction API",
                "description": "Get User Transaction.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data Fetched Successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/deletePayment": {
            "delete": {
                "tags": [
                    "Payment"
                ],
                "summary": "Delete Payment API",
                "description": "Delete Payment.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "description": "Payment Id",
                        "schema": {
                            "$ref": "#/components/id"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Payment deleted successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/editPayment": {
            "put": {
                "tags": [
                    "Payment"
                ],
                "summary": "Edit Payment API",
                "description": "Edit Payment.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/editPayment"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data Updated Successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/get_cities": {
            "get": {
                "tags": [
                    "Booking"
                ],
                "summary": "Get Cities API",
                "description": "Get Cities.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "curr_lat",
                        "schema": {
                            "$ref": "#/components/latitude"
                        }
                    },
                    {
                        "in": "query",
                        "name": "curr_long",
                        "schema": {
                            "$ref": "#/components/latitude"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data fetched successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/get_flights": {
            "post": {
                "tags": [
                    "Booking"
                ],
                "summary": "Get Flights API",
                "description": "Showing all the available flights for particular dates.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/get_flights"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data fetched successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/booking": {
            "post": {
                "tags": [
                    "Booking"
                ],
                "summary": "Booking API",
                "description": "Booking API",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/booking"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data fetched successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/get_seats_by_flightId": {
            "get": {
                "tags": [
                    "Booking"
                ],
                "summary": "Get Seats By FlightId API",
                "description": "Get Seats By FlightId API",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flight_id",
                        "schema": {
                            "$ref": "#/components/flight_id"
                        }
                    },
                    {
                        "in": "query",
                        "name": "second_flight_id",
                        "schema": {
                            "$ref": "#/components/second_flight_id"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data fetched successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/add_guest": {
            "post": {
                "tags": [
                    "Booking"
                ],
                "summary": "Add Guest API",
                "description": "Add Guest API",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/add_guest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Guest added successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/remove_guest": {
            "post": {
                "tags": [
                    "Booking"
                ],
                "summary": "Remove Guest API",
                "description": "Remove Guest API",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/remove_guest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Guest removed successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/search_pet_breeds": {
            "get": {
                "tags": [
                    "Booking"
                ],
                "summary": "Search Pet Breeds API",
                "description": "search_pet_breeds API",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "$ref": "#/components/search"
                        }
                    },
                    {
                        "in": "query",
                        "name": "pet_type",
                        "description": "Dog/Cat",
                        "schema": {
                            "$ref": "#/components/pet_type"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data Fetched Successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/add_pet": {
            "post": {
                "tags": [
                    "Booking"
                ],
                "summary": "Add Pet API",
                "description": "Add Pet API",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/add_pet"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Pet added successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/get_users_pets": {
            "get": {
                "tags": [
                    "Booking"
                ],
                "summary": "Get Users Pets  API",
                "description": "Get Users Pets API",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data fetched successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/edit_pet": {
            "put": {
                "tags": [
                    "Booking"
                ],
                "summary": "Edit Pet  API",
                "description": "edit_pet API",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/edit_pet"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Pet updated successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/lock_seat": {
            "post": {
                "tags": [
                    "Booking"
                ],
                "summary": "Lock Seat  API",
                "description": "lock_seat API, in this API user selects the seat for booking.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/lock_seat"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Seat selection successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/lock_seatv2": {
            "post": {
                "tags": [
                    "Booking"
                ],
                "summary": "Lock Seat v2 API",
                "description": "lock_seatv2 API, in this API user selects the seat for booking and preserve the seat for 3 minutes.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/lock_seat"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Seat selection successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/get_states": {
            "get": {
                "tags": [
                    "Booking"
                ],
                "summary": "Get States API",
                "description": "Get States.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data fetched successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/get_pet_data": {
            "post": {
                "tags": [
                    "Booking"
                ],
                "summary": "Get Pet Data API",
                "description": "get_pet_data.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/get_pet_data"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data fetched successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/delete_pet": {
            "delete": {
                "tags": [
                    "Booking"
                ],
                "summary": "Delete Pet API",
                "description": "Delete Pet.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "pet_id",
                        "schema": {
                            "$ref": "#/components/pet_id"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data deleted successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/booking_summary": {
            "get": {
                "tags": [
                    "Booking"
                ],
                "summary": "Booking Summary API",
                "description": "booking_summary.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flight_id",
                        "schema": {
                            "$ref": "#/components/flight_id"
                        }
                    },
                    {
                        "in": "query",
                        "name": "second_flight_id",
                        "schema": {
                            "$ref": "#/components/second_flight_id"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data fetched successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/guest_confirms_booking": {
            "get": {
                "tags": [
                    "Booking"
                ],
                "summary": "Guest Confirms Booking API",
                "description": "Guest Confirms/Rejects Booking.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flight_id",
                        "schema": {
                            "$ref": "#/components/flight_id"
                        }
                    },
                    {
                        "in": "query",
                        "name": "booking_id",
                        "schema": {
                            "$ref": "#/components/booking_id"
                        }
                    },
                    {
                        "in": "query",
                        "name": "user_id",
                        "schema": {
                            "$ref": "#/components/user_id"
                        }
                    },
                    {
                        "in": "query",
                        "name": "guest_id",
                        "schema": {
                            "$ref": "#/components/guest_id"
                        }
                    },
                    {
                        "in": "query",
                        "name": "confirm",
                        "description": "1/0",
                        "schema": {
                            "$ref": "#/components/confirm"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Booking confirmed by guest! || Booking rejected by guest!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/getBookingList": {
            "get": {
                "tags": [
                    "Booking"
                ],
                "summary": "Get Booking List API",
                "description": "Get all the upcoming, previous and canceled booking.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "schema": {
                            "$ref": "#/components/skip"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/limit"
                        }
                    },
                    {
                        "in": "query",
                        "name": "booking_status",
                        "schema": {
                            "$ref": "#/components/booking_status"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data Fetched Successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/check_users_booking": {
            "get": {
                "tags": [
                    "Booking"
                ],
                "summary": "Check Users Booking API",
                "description": "Check Users Booking.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data Fetched Successfully! || User can only book maximum of 2 flights at a time! || User can book a flight!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/pet_on_board_member_decision": {
            "post": {
                "tags": [
                    "Booking"
                ],
                "summary": "Pet On Board Member Decision API",
                "description": "Pet On Board Member Decision.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/pet_on_board_member_decision"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetch the Pet On Board response!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/convert_guest_pass": {
            "get": {
                "tags": [
                    "Booking"
                ],
                "summary": "Convert Guest Pass API",
                "description": "Convert Pet Pass to Guest Pass.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data fetched successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/heartBeat": {
            "get": {
                "tags": [
                    "Booking"
                ],
                "summary": "Heart Beat API",
                "description": "Heart Beat API to preserve the seat every 60 seconds when listening to Users activity.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flight_id",
                        "schema": {
                            "$ref": "#/components/flight_id"
                        }
                    },
                    {
                        "in": "query",
                        "name": "Sflight_id",
                        "schema": {
                            "$ref": "#/components/Sflight_id"
                        }
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "$ref": "#/components/type"
                        }
                    },
                    {
                        "in": "query",
                        "name": "booking_id",
                        "schema": {
                            "$ref": "#/components/Optionalbooking_id"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data fetched successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/cancelBooking": {
            "get": {
                "tags": [
                    "Booking"
                ],
                "summary": "Cancel Booking API",
                "description": "Cancel all the Bookings.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "$ref": "#/components/id"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Booking canceled successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/clearLockedSeats": {
            "get": {
                "tags": [
                    "Booking"
                ],
                "summary": "Clear Locked Seats API",
                "description": "Clear Locked Seats.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "description": "Flight Id",
                        "schema": {
                            "$ref": "#/components/id"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Cleared all locked seats!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/undoEditSeats": {
            "get": {
                "tags": [
                    "Booking"
                ],
                "summary": "Undo Edit Seats API",
                "description": "Undo Edit Seats.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "description": "Flight Id",
                        "schema": {
                            "$ref": "#/components/id"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Undo all edit seats!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user//cancelBooking": {
            "post": {
                "tags": [
                    "Booking"
                ],
                "summary": "Cancel Booking API",
                "description": "Cancel all the booking at once or cancel each seats bookings.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/cancelBooking"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Booking canceled successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/edit_seat": {
            "post": {
                "tags": [
                    "Booking"
                ],
                "summary": "Edit Seat API",
                "description": "Edit Seat.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/edit_seat"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Seat updation successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/confirmEditSeat": {
            "post": {
                "tags": [
                    "Booking"
                ],
                "summary": "confirmEditSeat API",
                "description": "confirmEditSeat.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/confirmEditSeat"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Seat updation successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/edit_seatv2": {
            "post": {
                "tags": [
                    "Booking"
                ],
                "summary": "edit_seatv2 API",
                "description": "edit_seatv2.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/edit_seat"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Seat updation successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/purchaseResetVoucher": {
            "post": {
                "tags": [
                    "Booking"
                ],
                "summary": "purchaseResetVoucher API",
                "description": "purchaseResetVoucher.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/purchaseResetVoucher"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Reset vouchers purchased successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/reset_passes": {
            "post": {
                "tags": [
                    "Booking"
                ],
                "summary": "Reset Passes API",
                "description": "reset_passes.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/reset_passes"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Reset successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/getBook_another_flights": {
            "post": {
                "tags": [
                    "Booking"
                ],
                "summary": "Get Another Flights API",
                "description": "Get another flights after cancellations.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/getBook_another_flights"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data fetched successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/notify_at_leaveTime": {
            "get": {
                "tags": [
                    "Booking"
                ],
                "summary": "Notify At Leave Time API",
                "description": "Notify At Leave Time.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "booking_id",
                        "schema": {
                            "$ref": "#/components/booking_id"
                        }
                    },
                    {
                        "in": "query",
                        "name": "second_booking_id",
                        "schema": {
                            "$ref": "#/components/second_booking_id"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "We will notify you at leave time!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/update_passes": {
            "get": {
                "tags": [
                    "Booking"
                ],
                "summary": "update_passes API",
                "description": "update_passes (For Testing Purpose, it manually add the passes).",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Done!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/edit_guest": {
            "put": {
                "tags": [
                    "Booking"
                ],
                "summary": "Edit Guest API",
                "description": "Edit Guest.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/edit_guest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Guest updated successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/changePreference": {
            "post": {
                "tags": [
                    "Preferences"
                ],
                "summary": "Change Preference API",
                "description": "Change Preference.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/changePreference"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Preferences added successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/getPreference": {
            "get": {
                "tags": [
                    "Preferences"
                ],
                "summary": "getPreference API",
                "description": "getPreference.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data Fetched Successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/viewAllLegal": {
            "get": {
                "tags": [
                    "Legal"
                ],
                "summary": "viewAllLegal API",
                "description": "viewAllLegal.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "schema": {
                            "$ref": "#/components/skip"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/limit"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data Fetched Successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/viewAllFAQcategory": {
            "get": {
                "tags": [
                    "FAQ"
                ],
                "summary": "viewAllFAQcategory API",
                "description": "viewAllFAQcategory.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "schema": {
                            "$ref": "#/components/skip"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "$ref": "#/components/limit"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data Fetched Successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/viewFAQbasedOnCategory": {
            "get": {
                "tags": [
                    "FAQ"
                ],
                "summary": "viewFAQbasedOnCategory API",
                "description": "viewFAQbasedOnCategory.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "$ref": "#/components/id"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data Fetched Successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/AddContactUs": {
            "post": {
                "tags": [
                    "ContactUs"
                ],
                "summary": "AddContactUs API",
                "description": "AddContactUs.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "optional",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/AddContactUs"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data Added Successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/contactUsAutoFields": {
            "get": {
                "tags": [
                    "ContactUs"
                ],
                "summary": "contactUsAutoFields API",
                "description": "contactUsAutoFields.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "optional",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data Fetched Successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/getBoutique": {
            "get": {
                "tags": [
                    "Boutique"
                ],
                "summary": "getBoutique API",
                "description": "getBoutique.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "required",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data Fetched Successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/buyGuestPasses": {
            "post": {
                "tags": [
                    "Boutique"
                ],
                "summary": "buyGuestPasses API",
                "description": "buyGuestPasses.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "required",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/buyGuestPasses"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Passes purchased successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/getHTMLContent": {
            "get": {
                "tags": [
                    "Boutique"
                ],
                "summary": "getHTMLContent API",
                "description": "getHTMLContent.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "optional",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "$ref": "#/components/getHTMLContent"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Data fetched successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/purchaseGiftCard": {
            "post": {
                "tags": [
                    "Boutique"
                ],
                "summary": "purchaseGiftCard API",
                "description": "purchaseGiftCard.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "required",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/purchaseGiftCard"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Gift Card Purchase successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/rescheduleDeliveryTime": {
            "post": {
                "tags": [
                    "Boutique"
                ],
                "summary": "rescheduleDeliveryTime API",
                "description": "rescheduleDeliveryTime.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "required",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/rescheduleDeliveryTime"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Reschedule successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/emailInvoice": {
            "get": {
                "tags": [
                    "Boutique"
                ],
                "summary": "emailInvoice API",
                "description": "emailInvoice.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "required",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "$ref": "#/components/emailInvoice"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Invoice sent to your mail!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/automaticMailInvoice": {
            "post": {
                "tags": [
                    "Boutique"
                ],
                "summary": "automaticMailInvoice API",
                "description": "automaticMailInvoice.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "required",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/automaticMailInvoice"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Automatic email invoice sets to test@gmail.com."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/downloadInvoice": {
            "get": {
                "tags": [
                    "Boutique"
                ],
                "summary": "downloadInvoice API",
                "description": "downloadInvoice.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "required",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "$ref": "#/components/id"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Pdf File"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/updateDeviceToken": {
            "post": {
                "tags": [
                    "Boutique"
                ],
                "summary": "updateDeviceToken API",
                "description": "updateDeviceToken.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "required",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/updateDeviceToken"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/oneTimeInitiationPayment": {
            "post": {
                "tags": [
                    "Boutique"
                ],
                "summary": "oneTimeInitiationPayment API",
                "description": "oneTimeInitiationPayment.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "required",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/oneTimeInitiationPayment"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Payment Initiated successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/send_referral": {
            "post": {
                "tags": [
                    "Boutique"
                ],
                "summary": "Send Referral API",
                "description": "send_referral.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "required",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/components/send_referral"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Unique code generated and stored successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/send_app_link": {
            "get": {
                "tags": [
                    "Boutique"
                ],
                "summary": "Send App Link API",
                "description": "Send App Link to Users phone number.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "required",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Mobile App Link sent to the user successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/freePreviewRegister": {
            "get": {
                "tags": [
                    "Boutique"
                ],
                "summary": "Free Preview Register API",
                "description": "Free Preview Register.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "required",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "User registered successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/getReferList": {
            "get": {
                "tags": [
                    "Boutique"
                ],
                "summary": "getReferList API",
                "description": "getReferList.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Referrals fetched successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v2/user/resendSignaturePDF": {
            "get": {
                "tags": [
                    "Boutique"
                ],
                "summary": "resendSignaturePDF API",
                "description": "resendSignaturePDF.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "pet_id",
                        "schema": {
                            "$ref": "#/components/pet_id"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resend PDF successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/api/v1/admin/register": {
            "post": {
                "tags": [
                    "Admin Auth"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "country_code": {
                                    "example": "+91",
                                    "type": "string"
                                },
                                "email": {
                                    "example": "subadmin@black-jet.com",
                                    "type": "string"
                                },
                                "first_name": {
                                    "example": "sachin",
                                    "type": "string"
                                },
                                "last_name": {
                                    "example": "puri",
                                    "type": "string"
                                },
                                "password": {
                                    "example": "123456",
                                    "type": "string"
                                },
                                "phone": {
                                    "example": "987767589",
                                    "type": "string"
                                },
                                "roles_array": {
                                    "example": [
                                        {
                                            "role_id": "661e67f8a57b40ec45929e9a",
                                            "role_status": "write"
                                        },
                                        {
                                            "role_id": "661e68d97908d3953faf5dd5",
                                            "role_status": "write"
                                        },
                                        {
                                            "role_id": "661e68ea7908d3953faf5dd7",
                                            "role_status": "read"
                                        }
                                    ],
                                    "items": {
                                        "properties": {
                                            "role_id": {
                                                "example": "661e67f8a57b40ec45929e9a",
                                                "type": "string"
                                            },
                                            "role_status": {
                                                "example": "write",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "register",
                "operationId": "register",
                "summary": "register"
            }
        },
        "/api/v1/admin/login": {
            "post": {
                "tags": [
                    "Admin Auth"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "email": {
                                    "example": "ashish.subadmin@techugo.com",
                                    "type": "string"
                                },
                                "password": {
                                    "example": "Admin@123456",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "login",
                "operationId": "login",
                "summary": "login"
            }
        },
        "/api/v1/admin/addAdminToGroup": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "group_id": {
                                    "example": "660e86750b51ab55b48163ea",
                                    "type": "string"
                                },
                                "id": {
                                    "example": "65b0b5815441fefd8f3c84f5",
                                    "type": "string"
                                },
                                "type": {
                                    "example": "admin",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "description": "Add Admin To Group",
                "operationId": "addAdminToGroup",
                "summary": "Add an admin to a group"
            }
        },
        "/api/v1/admin/addBoutiqueItem": {
            "post": {
                "tags": [
                    "Boutique"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "card_content": {
                                    "example": "ttrttrt",
                                    "type": "string"
                                },
                                "card_title": {
                                    "example": "hhhh",
                                    "type": "string"
                                },
                                "name": {
                                    "example": "yyy",
                                    "type": "string"
                                },
                                "product_set": {
                                    "example": "5",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "description": "Add Boutique Item",
                "operationId": "addBoutiqueItem",
                "summary": "Add a Boutique Item"
            }
        },
        "/api/v1/admin/addCategory": {
            "post": {
                "tags": [
                    "Category"
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "format": "binary",
                        "in": "formData",
                        "name": "image",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "name",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "addCategory",
                "operationId": "addcategory",
                "summary": "addCategory"
            }
        },
        "/api/v1/admin/addContent": {
            "post": {
                "tags": [
                    "CMS"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "message": {
                                    "example": "ttttttttttttttttttttttttt",
                                    "type": "string"
                                },
                                "type_of_content": {
                                    "example": "termsAndCondition",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "addContent",
                "operationId": "addcontent",
                "summary": "addContent"
            }
        },
        "/api/v1/admin/addDiscount": {
            "post": {
                "tags": [
                    "Discount"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "discount_alias_name": {
                                    "example": "second",
                                    "type": "string"
                                },
                                "end_date": {
                                    "example": "2023-11-10T05:50:15.083+00:00",
                                    "type": "string"
                                },
                                "indefinite_end_date": {
                                    "example": "true",
                                    "type": "string"
                                },
                                "indefinite_seats": {
                                    "example": "false",
                                    "type": "string"
                                },
                                "initiation_fees": {
                                    "example": "500",
                                    "type": "string"
                                },
                                "membership_id": {
                                    "example": "654b3610d8a13175f8f349d6",
                                    "type": "string"
                                },
                                "start_date": {
                                    "example": "2023-11-08T05:50:15.083+00:00",
                                    "type": "string"
                                },
                                "tier": {
                                    "example": [
                                        {
                                            "discount_price": "500",
                                            "no_of_seats": 1
                                        },
                                        {
                                            "discount_price": "200",
                                            "no_of_seats": 7
                                        },
                                        {
                                            "discount_price": "500",
                                            "no_of_seats": 7
                                        }
                                    ],
                                    "items": {
                                        "properties": {
                                            "discount_price": {
                                                "example": "500",
                                                "type": "string"
                                            },
                                            "no_of_seats": {
                                                "example": 1,
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "total_seats": {
                                    "example": 1000,
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "addDiscount",
                "operationId": "adddiscount",
                "summary": "addDiscount"
            }
        },
        "/api/v1/admin/addFaq": {
            "post": {
                "tags": [
                    "CMS"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "answer": {
                                    "example": "FAQ stands for Frequently Asked Questions.",
                                    "type": "string"
                                },
                                "category": {
                                    "example": "65327606c868e2fd9d89b2c6",
                                    "type": "string"
                                },
                                "question": {
                                    "example": "Sacccchin?",
                                    "type": "string"
                                },
                                "section_description": {
                                    "example": "",
                                    "type": "string"
                                },
                                "section_heading": {
                                    "example": "",
                                    "type": "string"
                                },
                                "title": {
                                    "example": "yes",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "addFaq",
                "operationId": "addfaq",
                "summary": "addFaq"
            }
        },
        "/api/v1/admin/addHalfTextImage": {
            "post": {
                "tags": [
                    "Homepage"
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "formData",
                        "name": "heading",
                        "type": "string"
                    },
                    {
                        "format": "binary",
                        "in": "formData",
                        "name": "image",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "image_link",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "section_heading",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "sub_heading",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "text",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "addHalfTextImage",
                "operationId": "addhalftextimage",
                "summary": "addHalfTextImage"
            }
        },
        "/api/v1/admin/addHomePage": {
            "post": {
                "tags": [
                    "Homepage"
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "formData",
                        "name": "",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "fram2Card[0][d",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "fram2Card[1][desciption]",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "fram2Card[1][title]",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "fram4Card[0][desciption]",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "fram6Card[0][ti",
                        "type": "string"
                    },
                    {
                        "format": "binary",
                        "in": "formData",
                        "name": "frame1Logo",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "frame1Video",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "frame2Card",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "frame2Text",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "frame2Video",
                        "type": "string"
                    },
                    {
                        "format": "binary",
                        "in": "formData",
                        "name": "frame3Logo",
                        "type": "string"
                    },
                    {
                        "format": "binary",
                        "in": "formData",
                        "name": "frame3Video",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "frame4Card",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "frame4Text",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "frame5Video",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "frame6Card",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "frame7Text",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "frame7Video",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "frame8Text",
                        "type": "string"
                    },
                    {
                        "format": "binary",
                        "in": "formData",
                        "name": "image",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "addHomePage",
                "operationId": "addhomepage",
                "summary": "addHomePage"
            }
        },
        "/api/v1/admin/addInvestors": {
            "post": {
                "tags": [
                    "Investors"
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "formData",
                        "name": "frame1_image",
                        "type": "string"
                    },
                    {
                        "format": "binary",
                        "in": "formData",
                        "name": "frame2_image",
                        "type": "string"
                    },
                    {
                        "format": "binary",
                        "in": "formData",
                        "name": "frame3_image",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "frame4_content",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "addInvestors",
                "operationId": "addinvestors",
                "summary": "addInvestors"
            }
        },
        "/api/v1/admin/addItems": {
            "post": {
                "tags": [
                    "Gift Card & Guest Passes"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "gst": {
                                    "example": "18%",
                                    "type": "string"
                                },
                                "name": {
                                    "example": "jj",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "addItems",
                "operationId": "additems",
                "summary": "addItems"
            }
        },
        "/api/v1/admin/addLegal": {
            "post": {
                "tags": [
                    "Legal"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "legalTitle": {
                                    "example": "nikhil",
                                    "type": "string"
                                },
                                "subTitle": {
                                    "example": [
                                        {
                                            "legalContent": "dfguhjihugyf",
                                            "legalSubtitle": "dfghjkhgf"
                                        },
                                        {
                                            "legalContent": "sdftgyuhtfgd",
                                            "legalSubtitle": "hhhhhhhhhhhhhhhhhhhhhhhhhhh"
                                        },
                                        {
                                            "legalContent": "asggagsd",
                                            "legalSubtitle": "asggagsd"
                                        }
                                    ],
                                    "items": {
                                        "properties": {
                                            "legalContent": {
                                                "example": "dfguhjihugyf",
                                                "type": "string"
                                            },
                                            "legalSubtitle": {
                                                "example": "dfghjkhgf",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "addLegal",
                "operationId": "addlegal",
                "summary": "addLegal"
            }
        },
        "/api/v1/admin/addMembership": {
            "post": {
                "tags": [
                    "Membership"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "content": {
                                    "example": "this is first membership",
                                    "type": "string"
                                },
                                "highlightsArray": {
                                    "example": [
                                        {
                                            "highlight": "1112",
                                            "strikeThroughHighlight": ""
                                        },
                                        {
                                            "highlight": "333",
                                            "strikeThroughHighlight": "yyyyyyyyyyyyyyyyyyyyyyyyyyyyy"
                                        }
                                    ],
                                    "items": {
                                        "properties": {
                                            "highlight": {
                                                "example": "1112",
                                                "type": "string"
                                            },
                                            "strikeThroughHighlight": {
                                                "example": "",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "name": {
                                    "example": "first membership",
                                    "type": "string"
                                },
                                "text": {
                                    "example": "General Information",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "addMembership",
                "operationId": "addmembership",
                "summary": "addMembership"
            }
        },
        "/api/v1/admin/addOrUpdateSavedLocation": {
            "post": {
                "tags": [
                    "Nav Location"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "locationIds": {
                                    "example": "654cd92e119f02aae3331fc3,654cd942119f02aae3331fc7",
                                    "type": "string"
                                },
                                "type": {
                                    "example": "contact_us",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "addOrUpdateSavedLocation",
                "operationId": "addorupdatesavedlocation",
                "summary": "addOrUpdateSavedLocation"
            }
        },
        "/api/v1/admin/addPaymentGateway": {
            "post": {
                "tags": [
                    "Payment Gateway"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Accept-Language",
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "Connection",
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "Origin",
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "Referer",
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "Sec-Fetch-Dest",
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "Sec-Fetch-Mode",
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "Sec-Fetch-Site",
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "User-Agent",
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "sec-ch-ua",
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "sec-ch-ua-mobile",
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "sec-ch-ua-platform",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "example": [
                                {
                                    "_id": "6628bd98d0abe5a8f8bd8cc2",
                                    "airwallexPercentage": 80,
                                    "enabled": true,
                                    "paymentType": "visa",
                                    "stripePercentage": 20
                                },
                                {
                                    "_id": "6628bd98d0abe5a8f8bd8cc3",
                                    "airwallexPercentage": 80,
                                    "enabled": false,
                                    "paymentType": "masterCard",
                                    "stripePercentage": 20
                                },
                                {
                                    "_id": "6628bd98d0abe5a8f8bd8cc4",
                                    "airwallexPercentage": 80,
                                    "enabled": false,
                                    "paymentType": "amex",
                                    "stripePercentage": 20
                                }
                            ],
                            "items": {
                                "properties": {
                                    "_id": {
                                        "example": "6628bd98d0abe5a8f8bd8cc2",
                                        "type": "string"
                                    },
                                    "airwallexPercentage": {
                                        "example": 80,
                                        "type": "number"
                                    },
                                    "enabled": {
                                        "example": true,
                                        "type": "boolean"
                                    },
                                    "paymentType": {
                                        "example": "visa",
                                        "type": "string"
                                    },
                                    "stripePercentage": {
                                        "example": 20,
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "addPaymentGateway",
                "operationId": "addpaymentgateway",
                "summary": "addPaymentGateway"
            }
        },
        "/api/v1/admin/addPrice": {
            "post": {
                "tags": [
                    "Pricing"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "delete_ids": {
                                    "example": "",
                                    "type": "string"
                                },
                                "membership": {
                                    "example": "654b3610d8a13175f8f349d6",
                                    "type": "string"
                                },
                                "schedule_prices": {
                                    "example": [
                                        {
                                            "effectiveDate": "2024-05-08T12:26:56.000+00:00",
                                            "initiationFees": "333",
                                            "price": "4"
                                        }
                                    ],
                                    "items": {
                                        "properties": {
                                            "effectiveDate": {
                                                "example": "2024-05-08T12:26:56.000+00:00",
                                                "type": "string"
                                            },
                                            "initiationFees": {
                                                "example": "333",
                                                "type": "string"
                                            },
                                            "price": {
                                                "example": "4",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "type": {
                                    "example": "membership",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "addPrice",
                "operationId": "addprice",
                "summary": "addPrice"
            }
        },
        "/api/v1/admin/addTestimonial": {
            "post": {
                "tags": [
                    "Testimonial"
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "formData",
                        "name": "comment",
                        "type": "string"
                    },
                    {
                        "format": "binary",
                        "in": "formData",
                        "name": "image",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "name",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "addTestimonial",
                "operationId": "addtestimonial",
                "summary": "addTestimonial"
            }
        },
        "/api/v1/admin/addUser": {
            "post": {
                "tags": [
                    "User"
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "formData",
                        "name": "birthday",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "country_code",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "email",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "fullName",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "gender",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "industries",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "industries[1]",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "phone",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "preferredFirstName",
                        "type": "string"
                    },
                    {
                        "format": "binary",
                        "in": "formData",
                        "name": "profile_pic",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "status",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "addUser",
                "operationId": "adduser",
                "summary": "addUser"
            }
        },
        "/api/v1/admin/add_blog": {
            "post": {
                "tags": [
                    "Blog"
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "format": "binary",
                        "in": "formData",
                        "name": "author_image",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "author_name",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "author_title",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "blog_category",
                        "type": "string"
                    },
                    {
                        "format": "binary",
                        "in": "formData",
                        "name": "blog_image",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "blog_section",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "blog_slug",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "blog_title",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "add_blog",
                "operationId": "addBlog",
                "summary": "add_blog"
            }
        },
        "/api/v1/admin/add_sale": {
            "post": {
                "tags": [
                    "Sale"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "discount_price": {
                                    "example": "5999",
                                    "type": "string"
                                },
                                "flash_sale": {
                                    "example": false,
                                    "type": "boolean"
                                },
                                "id": {
                                    "example": "65b8b3cec0f8cb43afb362b7",
                                    "type": "string"
                                },
                                "sale_end_date_time": {
                                    "example": "2024-01-31T12:40:07.082Z",
                                    "type": "string"
                                },
                                "sale_start_date_time": {
                                    "example": "2024-01-29T12:40:07.082Z",
                                    "type": "string"
                                },
                                "type": {
                                    "example": "boutique",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "add_sale",
                "operationId": "addSale",
                "summary": "add_sale"
            }
        },
        "/api/v1/admin/adminForgotPassword": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "email": {
                                    "example": "sachin.puri@techugo.com",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "adminForgotPassword",
                "operationId": "adminforgotpassword",
                "summary": "adminForgotPassword"
            }
        },
        "/api/v1/admin/blogs_list": {
            "get": {
                "tags": [
                    "Blog"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "blogs_list",
                "operationId": "blogsList",
                "summary": "blogs_list"
            }
        },
        "/api/v1/admin/breedList": {
            "get": {
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "breedList",
                "operationId": "breedlist",
                "summary": "breedList"
            }
        },
        "/api/v1/admin/contactUs": {
            "post": {
                "tags": [
                    "CMS"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "email": {
                                    "example": "nik@gmail.com",
                                    "type": "string"
                                },
                                "message": {
                                    "example": "heklllo",
                                    "type": "string"
                                },
                                "name": {
                                    "example": "sachi",
                                    "type": "string"
                                },
                                "phone": {
                                    "example": "865656464",
                                    "type": "string"
                                },
                                "phone_code": {
                                    "example": "+61",
                                    "type": "string"
                                },
                                "subject": {
                                    "example": "fhhfhfhfhfh",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "contactUs",
                "operationId": "contactus",
                "summary": "contactUs"
            }
        },
        "/api/v1/admin/contentList": {
            "get": {
                "tags": [
                    "CMS"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "type_of_content",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "contentList",
                "operationId": "contentlist",
                "summary": "contentList"
            }
        },
        "/api/v1/admin/deleteLegal": {
            "post": {
                "tags": [
                    "CMS"
                ],
                "consumes": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "format": "binary",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "deleteLegal",
                "operationId": "deletelegal",
                "summary": "deleteLegal"
            }
        },
        "/api/v1/admin/delete_blog": {
            "post": {
                "tags": [
                    "Blog"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "id": {
                                    "example": "659bacbd10a80db006234aa8",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "delete_blog",
                "operationId": "deleteBlog",
                "summary": "delete_blog"
            }
        },
        "/api/v1/admin/delete_contact_us": {
            "post": {
                "tags": [
                    "CMS"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "id": {
                                    "example": "6596b59dafa579fb97a2e5a0",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "delete_contact_us",
                "operationId": "deleteContactUs",
                "summary": "delete_contact_us"
            }
        },
        "/api/v1/admin/discountList": {
            "get": {
                "tags": [
                    "Discount"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "discountList",
                "operationId": "discountlist",
                "summary": "discountList"
            }
        },
        "/api/v1/admin/editBoutiqueItem": {
            "post": {
                "tags": [
                    "Boutique"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "card_content": {
                                    "example": "ttrttrt",
                                    "type": "string"
                                },
                                "card_title": {
                                    "example": "hhhh",
                                    "type": "string"
                                },
                                "id": {
                                    "example": "654ccf7250f4cf7fc839789c",
                                    "type": "string"
                                },
                                "name": {
                                    "example": "hello",
                                    "type": "string"
                                },
                                "product_set": {
                                    "example": "5",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "editBoutiqueItem",
                "operationId": "editboutiqueitem",
                "summary": "editBoutiqueItem"
            }
        },
        "/api/v1/admin/editCategory": {
            "post": {
                "tags": [
                    "Category"
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "formData",
                        "name": "categoryId",
                        "type": "string"
                    },
                    {
                        "format": "binary",
                        "in": "formData",
                        "name": "image",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "name",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "editCategory",
                "operationId": "editcategory",
                "summary": "editCategory"
            }
        },
        "/api/v1/admin/editFaq": {
            "post": {
                "tags": [
                    "CMS"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "answer": {
                                    "example": "FAQ stands for Frequently Asked Questions.",
                                    "type": "string"
                                },
                                "category": {
                                    "example": "657ad3ac686ac14c1d5e2e2e",
                                    "type": "string"
                                },
                                "id": {
                                    "example": "658bdfa77ecccac61038d8ee",
                                    "type": "string"
                                },
                                "question": {
                                    "example": "Sacccchin?",
                                    "type": "string"
                                },
                                "section_description": {
                                    "example": "General Information",
                                    "type": "string"
                                },
                                "section_heading": {
                                    "example": "FAQs",
                                    "type": "string"
                                },
                                "title": {
                                    "example": "yes",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "editFaq",
                "operationId": "editfaq",
                "summary": "editFaq"
            }
        },
        "/api/v1/admin/editHomePage": {
            "post": {
                "tags": [
                    "Homepage"
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "formData",
                        "name": "card[0][description]",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "card[0][title]",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "card[1][description]",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "card[1][title]",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "card[2][description]",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "card[2][title]",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "id",
                        "type": "string"
                    },
                    {
                        "format": "binary",
                        "in": "formData",
                        "name": "image",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "text",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "video",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "editHomePage",
                "operationId": "edithomepage",
                "summary": "editHomePage"
            }
        },
        "/api/v1/admin/editItem": {
            "post": {
                "tags": [
                    "CMS"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "id": {
                                    "example": "654ccc1345e483c6333cbebc",
                                    "type": "string"
                                },
                                "name": {
                                    "example": "first",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "editItem",
                "operationId": "edititem",
                "summary": "editItem"
            }
        },
        "/api/v1/admin/editLegal": {
            "post": {
                "tags": [
                    "CMS"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "id": {
                                    "example": "6582c43d6d09ea114af4c0ff",
                                    "type": "string"
                                },
                                "legalTitle": {
                                    "example": "vijay",
                                    "type": "string"
                                },
                                "subTitle": {
                                    "example": [
                                        {
                                            "legalContent": "vijajajajjaja",
                                            "legalSubtitle": "nikhi"
                                        },
                                        {
                                            "legalContent": "wbefuyhwefuqwefuwe",
                                            "legalSubtitle": "uyhwefuwefuiwerfuier"
                                        }
                                    ],
                                    "items": {
                                        "properties": {
                                            "legalContent": {
                                                "example": "vijajajajjaja",
                                                "type": "string"
                                            },
                                            "legalSubtitle": {
                                                "example": "nikhi",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "editLegal",
                "operationId": "editlegal",
                "summary": "editLegal"
            }
        },
        "/api/v1/admin/editMembership": {
            "post": {
                "tags": [
                    "Membership"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "content": {
                                    "example": "this is first membership",
                                    "type": "string"
                                },
                                "id": {
                                    "example": "653a4a5227b403d7c1980ebf",
                                    "type": "string"
                                },
                                "name": {
                                    "example": "first membership",
                                    "type": "string"
                                },
                                "text": {
                                    "example": "General Information",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "editMembership",
                "operationId": "editmembership",
                "summary": "editMembership"
            }
        },
        "/api/v1/admin/editPaymentStatus": {
            "post": {
                "tags": [
                    "Payment Gateway"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "enabled": {
                                    "example": false,
                                    "type": "boolean"
                                },
                                "id": {
                                    "example": "6628b7b6d8f5880995156c6b",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "edit_payment_gateway_status",
                "operationId": "editPaymentGatewayStatus",
                "summary": "edit_payment_gateway_status"
            }
        },
        "/api/v1/admin/editUser": {
            "post": {
                "tags": [
                    "User"
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "formData",
                        "name": "",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "birthday",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "fullName",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "gender",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "id",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "preferredFirstName",
                        "type": "string"
                    },
                    {
                        "format": "binary",
                        "in": "formData",
                        "name": "profile_pic",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "editUser",
                "operationId": "edituser",
                "summary": "editUser"
            }
        },
        "/api/v1/admin/edit_blog": {
            "post": {
                "tags": [
                    "Blog"
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "format": "binary",
                        "in": "formData",
                        "name": "author_image",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "author_name",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "author_title",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "blog_category",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "blog_image",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "blog_section",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "blog_slug",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "blog_title",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "edit_blog",
                "operationId": "editBlog",
                "summary": "edit_blog"
            }
        },
        "/api/v1/admin/edit_discount_price": {
            "post": {
                "tags": [
                    "Discount"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "discount_price": {
                                    "example": "66",
                                    "type": "string"
                                },
                                "id": {
                                    "example": "658ab0be08058dca7f9c5fb6",
                                    "type": "string"
                                },
                                "type": {
                                    "example": "boutique",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "edit_discount_price",
                "operationId": "editDiscountPrice",
                "summary": "edit_discount_price"
            }
        },
        "/api/v1/admin/enquiries": {
            "get": {
                "tags": [
                    "Inbox"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "enquiries",
                "operationId": "enquiries",
                "summary": "enquiries"
            }
        },
        "/api/v1/admin/get-roles": {
            "get": {
                "tags": [
                    "Role"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "get-roles",
                "operationId": "getRoles",
                "summary": "get-roles"
            }
        },
        "/api/v1/admin/getAdminProfile": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "getAdminProfile",
                "operationId": "getadminprofile",
                "summary": "getAdminProfile"
            }
        },
        "/api/v1/admin/getAllAdminProfiles": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "/getAllAdminProfiles",
                "operationId": "getalladminprofiles",
                "summary": "/getAllAdminProfiles"
            }
        },
        "/api/v1/admin/getAllCareers": {
            "get": {
                "tags": [
                    "CMS"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "getAllCareers",
                "operationId": "getallcareers",
                "summary": "getAllCareers"
            }
        },
        "/api/v1/admin/getAllCategories": {
            "get": {
                "tags": [
                    "Category"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "getAllCategories",
                "operationId": "getallcategories",
                "summary": "getAllCategories"
            }
        },
        "/api/v1/admin/getAllFlights": {
            "get": {
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "getAllFlights",
                "operationId": "getallflights",
                "summary": "getAllFlights"
            }
        },
        "/api/v1/admin/getAllNavLocations": {
            "get": {
                "tags": [
                    "Nav Location"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "getAllNavLocations",
                "operationId": "getallnavlocations",
                "summary": "getAllNavLocations"
            }
        },
        "/api/v1/admin/getAllRoutes": {
            "get": {
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "getAllRoutes",
                "operationId": "getallroutes",
                "summary": "getAllRoutes"
            }
        },
        "/api/v1/admin/getAllUsers": {
            "get": {
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "is_member",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "getAllUsers",
                "operationId": "getallusers",
                "summary": "getAllUsers"
            }
        },
        "/api/v1/admin/getAnnouncement": {
            "get": {
                "tags": [
                    "Announcement"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "_id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "getAnnouncement",
                "operationId": "getannouncement",
                "summary": "getAnnouncement"
            }
        },
        "/api/v1/admin/getAnnouncements": {
            "get": {
                "tags": [
                    "Announcement"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "getAnnouncements?skip=1&limit=3",
                "operationId": "getannouncementsSkip1Limit3",
                "summary": "getAnnouncements?skip=1&limit=3"
            }
        },
        "/api/v1/admin/getBoutiqueItem": {
            "get": {
                "tags": [
                    "Boutique"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "getBoutiqueItem",
                "operationId": "getboutiqueitem",
                "summary": "getBoutiqueItem"
            }
        },
        "/api/v1/admin/getDiscount": {
            "get": {
                "tags": [
                    "Discount"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "getDiscount",
                "operationId": "getdiscount",
                "summary": "getDiscount"
            }
        },
        "/api/v1/admin/getEnquiry": {
            "get": {
                "tags": [
                    "Inbox"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "getEnquiry",
                "operationId": "getenquiry",
                "summary": "getEnquiry"
            }
        },
        "/api/v1/admin/getEnquiryList": {
            "get": {
                "tags": [
                    "Inbox"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "getEnquiryList",
                "operationId": "getenquirylist",
                "summary": "getEnquiryList"
            }
        },
        "/api/v1/admin/getIndustry": {
            "get": {
                "tags": [
                    "Industry"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "getIndustry",
                "operationId": "getindustry",
                "summary": "getIndustry"
            }
        },
        "/api/v1/admin/getSingleEnquiry": {
            "get": {
                "tags": [
                    "Inbox"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "getSingleEnquiry",
                "operationId": "getsingleenquiry",
                "summary": "getSingleEnquiry"
            }
        },
        "/api/v1/admin/getUser": {
            "get": {
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "getUser",
                "operationId": "getuser",
                "summary": "getUser"
            }
        },
        "/api/v1/admin/getUserFlights": {
            "get": {
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "getUserFlights",
                "operationId": "getuserflights",
                "summary": "getUserFlights"
            }
        },
        "/api/v1/admin/getUserJob": {
            "get": {
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "getUserJob",
                "operationId": "getuserjob",
                "summary": "getUserJob"
            }
        },
        "/api/v1/admin/getUserPet": {
            "get": {
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "getUserPet",
                "operationId": "getuserpet",
                "summary": "getUserPet"
            }
        },
        "/api/v1/admin/getUserPets": {
            "get": {
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "getUserPets",
                "operationId": "getuserpets",
                "summary": "getUserPets"
            }
        },
        "/api/v1/admin/getUsers": {
            "get": {
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "viewMembership",
                "operationId": "viewmembership1",
                "summary": "viewMembership"
            }
        },
        "/api/v1/admin/get_all_sale": {
            "get": {
                "tags": [
                    "Sale"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "get_all_sale",
                "operationId": "getAllSale",
                "summary": "get_all_sale"
            }
        },
        "/api/v1/admin/get_blog": {
            "get": {
                "tags": [
                    "Blog"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "get_blog",
                "operationId": "getBlog",
                "summary": "get_blog"
            }
        },
        "/api/v1/admin/get_items_and_boutiques": {
            "get": {
                "tags": [
                    "Items and Boutiques"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "get_items_and_boutiques",
                "operationId": "getItemsAndBoutiques1",
                "summary": "get_items_and_boutiques"
            }
        },
        "/api/v1/admin/getPaymentGateway": {
            "get": {
                "tags": [
                    "Payment Gateway"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "getPaymentGateway",
                "operationId": "getPaymentGateway",
                "summary": "getPaymentGateway"
            }
        },
        "/api/v1/admin/getPaymentList": {
            "get": {
                "tags": [
                    "Payment Gateway"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "getPaymentGatewayList",
                "operationId": "getPaymentGatewayList",
                "summary": "getPaymentGatewayList"
            }
        },
        "/api/v1/admin/get_upcoming_booking": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "get_upcoming_booking",
                "operationId": "getUpcomingBooking",
                "summary": "get_upcoming_booking"
            }
        },
        "/api/v1/admin/listHomePage": {
            "get": {
                "tags": [
                    "Homepage"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "listHomePage",
                "operationId": "listhomepage",
                "summary": "listHomePage"
            }
        },
        "/api/v1/admin/membershipList": {
            "get": {
                "tags": [
                    "Membership"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "membershipList",
                "operationId": "membershiplist",
                "summary": "membershipList"
            }
        },
        "/api/v1/admin/membership_price_history": {
            "get": {
                "tags": [
                    "Membership"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "membership_price_history",
                "operationId": "membershipPriceHistory",
                "summary": "membership_price_history"
            }
        },
        "/api/v1/admin/priceHistory": {
            "get": {
                "tags": [
                    "Pricing"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "priceHistory",
                "operationId": "pricehistory",
                "summary": "priceHistory"
            }
        },
        "/api/v1/admin/resetPassword": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "confirmPassword": {
                                    "example": "12345",
                                    "type": "string"
                                },
                                "id": {
                                    "example": "6530f8864811f169dc17124f",
                                    "type": "string"
                                },
                                "newPassword": {
                                    "example": "12345",
                                    "type": "string"
                                },
                                "oldPassword": {
                                    "example": "123456",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "resetPassword",
                "operationId": "resetpassword",
                "summary": "resetPassword"
            }
        },
        "/api/v1/admin/sendAnnouncement": {
            "post": {
                "tags": [
                    "Announcement"
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "formData",
                        "name": "_id",
                        "type": "string"
                    },
                    {
                        "format": "binary",
                        "in": "formData",
                        "name": "image",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "message",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "title",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "type",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "user_ids",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "sendAnnouncement",
                "operationId": "sendannouncement",
                "summary": "sendAnnouncement"
            }
        },
        "/api/v1/admin/sendInboxMail": {
            "post": {
                "tags": [
                    "Inbox"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "id": {
                                    "example": "6620bcfd323c43cde6468abb",
                                    "type": "string"
                                },
                                "message": {
                                    "example": "hekkkkkkkkkkkkkk",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "sendInboxMail",
                "operationId": "sendinboxmail",
                "summary": "sendInboxMail"
            }
        },
        "/api/v1/admin/stateList": {
            "get": {
                "tags": [
                    "State List"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "stateList",
                "operationId": "statelist",
                "summary": "stateList"
            }
        },
        "/api/v1/admin/updateAdminProfile": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "country_code": {
                                    "example": "+91",
                                    "type": "string"
                                },
                                "email": {
                                    "example": "ashish.sumit@techugo.com",
                                    "type": "string"
                                },
                                "first_name": {
                                    "example": "nikhil",
                                    "type": "string"
                                },
                                "id": {
                                    "example": "6638e50a1324c524f5d00767",
                                    "type": "string"
                                },
                                "last_name": {
                                    "example": "rai",
                                    "type": "string"
                                },
                                "password": {
                                    "example": "12345678",
                                    "type": "string"
                                },
                                "phone": {
                                    "example": "7488324310",
                                    "type": "string"
                                },
                                "roles_array": {
                                    "example": [
                                        {
                                            "role_id": "659d152d5c2fe16e7ba5e05a",
                                            "role_status": "write"
                                        },
                                        {
                                            "role_id": "659d15055c2fe16e7ba5e059",
                                            "role_status": "read"
                                        }
                                    ],
                                    "items": {
                                        "properties": {
                                            "role_id": {
                                                "example": "659d152d5c2fe16e7ba5e05a",
                                                "type": "string"
                                            },
                                            "role_status": {
                                                "example": "write",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "updateAdminProfile",
                "operationId": "updateadminprofile",
                "summary": "updateAdminProfile"
            }
        },
        "/api/v1/admin/updateAdminStatus": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "id": {
                                    "example": "6530fae8a81cd3595dc08736",
                                    "type": "string"
                                },
                                "status": {
                                    "example": "inactive",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "updateAdminStatus",
                "operationId": "updateadminstatus",
                "summary": "updateAdminStatus"
            }
        },
        "/api/v1/admin/updateBoutiqueItemStatus": {
            "post": {
                "tags": [
                    "Boutique"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "id": {
                                    "example": "653bc48228a75cfd4f3bf13b",
                                    "type": "string"
                                },
                                "status": {
                                    "example": "inactive",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "updateBoutiqueItemStatus",
                "operationId": "updateboutiqueitemstatus",
                "summary": "updateBoutiqueItemStatus"
            }
        },
        "/api/v1/admin/updateDiscountStatus": {
            "post": {
                "tags": [
                    "Discount"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "id": {
                                    "example": "654e1d1a7c290ab9feb7ab1f",
                                    "type": "string"
                                },
                                "status": {
                                    "example": "inactive",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "updateDiscountStatus",
                "operationId": "updatediscountstatus",
                "summary": "updateDiscountStatus"
            }
        },
        "/api/v1/admin/updateItemStatus": {
            "post": {
                "tags": [
                    "Gift Card & Guest Passes"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "id": {
                                    "example": "65afc9c3c1df9dec51c5b93c",
                                    "type": "string"
                                },
                                "status": {
                                    "example": "inactive",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "updateItemStatus",
                "operationId": "updateitemstatus",
                "summary": "updateItemStatus"
            }
        },
        "/api/v1/admin/updateMembership": {
            "post": {
                "tags": [
                    "Membership"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "id": {
                                    "example": "653622b3e1cfc21c3300ff1b",
                                    "type": "string"
                                },
                                "status": {
                                    "example": "active",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "updateMembership",
                "operationId": "updatemembership",
                "summary": "updateMembership"
            }
        },
        "/api/v1/admin/updatePriceStatus": {
            "post": {
                "tags": [
                    "Pricing"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "id": {
                                    "example": "6579640643767abb102fef17",
                                    "type": "string"
                                },
                                "status": {
                                    "example": "inactive",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "updatePriceStatus",
                "operationId": "updatepricestatus",
                "summary": "updatePriceStatus"
            }
        },
        "/api/v1/admin/updateReadStatus": {
            "post": {
                "tags": [
                    "Inbox"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "id": {
                                    "example": "6620bcfd323c43cde6468abb",
                                    "type": "string"
                                },
                                "isRead": {
                                    "example": "",
                                    "type": "string"
                                },
                                "status": {
                                    "example": "inactive",
                                    "type": "string"
                                },
                                "type": {
                                    "example": "",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "updateReadStatus",
                "operationId": "updatereadstatus",
                "summary": "updateReadStatus"
            }
        },
        "/api/v1/admin/updateTestimonial": {
            "post": {
                "tags": [
                    "Testimonial"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "id": {
                                    "example": "65325008e733173c1e7ae4e8",
                                    "type": "string"
                                },
                                "status": {
                                    "example": "inactive",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "updateTestimonial",
                "operationId": "updatetestimonial",
                "summary": "updateTestimonial"
            }
        },
        "/api/v1/admin/updateUserStatus": {
            "post": {
                "tags": [
                    "User"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "id": {
                                    "example": "658155f42cca502f2cd0499d",
                                    "type": "string"
                                },
                                "status": {
                                    "example": "inactive",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "updateUserStatus",
                "operationId": "updateuserstatus",
                "summary": "updateUserStatus"
            }
        },
        "/api/v1/admin/update_blog_status": {
            "post": {
                "tags": [
                    "Blog"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "blog_published_date": {
                                    "example": "",
                                    "type": "string"
                                },
                                "id": {
                                    "example": "659babc5e11775cf5058fe59",
                                    "type": "string"
                                },
                                "status": {
                                    "example": "inactive",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "update_blog_status",
                "operationId": "updateBlogStatus",
                "summary": "update_blog_status"
            }
        },
        "/api/v1/admin/update_user_membership": {
            "post": {
                "tags": [
                    "User"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "properties": {
                                "change_date": {
                                    "example": "2024-01-18T10:56:09.656+00:00",
                                    "type": "string"
                                },
                                "changed_price": {
                                    "example": "300",
                                    "type": "string"
                                },
                                "id": {
                                    "example": "658bd962579337fb7260e6f4",
                                    "type": "string"
                                },
                                "mail_message": {
                                    "example": "dfghujikghfdghj",
                                    "type": "string"
                                },
                                "user_id": {
                                    "example": "65734bfcf899df88a5190f68",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "update_user_membership",
                "operationId": "updateUserMembership",
                "summary": "update_user_membership"
            }
        },
        "/api/v1/admin/updated_membership_list": {
            "get": {
                "tags": [
                    "Membership"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "updated_membership_list",
                "operationId": "updatedMembershipList",
                "summary": "updated_membership_list"
            }
        },
        "/api/v1/admin/uploadAnyFiles": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "format": "binary",
                        "in": "formData",
                        "name": "image",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "uploadAnyFiles",
                "operationId": "uploadanyfiles1",
                "summary": "uploadAnyFiles"
            }
        },
        "/api/v1/admin/user_jobs_list": {
            "get": {
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "user_jobs_list",
                "operationId": "userJobsList",
                "summary": "user_jobs_list"
            }
        },
        "/api/v1/admin/user_membership_List": {
            "get": {
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "user_membership_List",
                "operationId": "userMembershipList",
                "summary": "user_membership_List"
            }
        },
        "/api/v1/admin/viewAllBoutique": {
            "get": {
                "tags": [
                    "Boutique"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "viewAllBoutique",
                "operationId": "viewallboutique",
                "summary": "viewAllBoutique"
            }
        },
        "/api/v1/admin/viewAllFAQs": {
            "get": {
                "tags": [
                    "CMS"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "viewAllFAQs",
                "operationId": "viewallfaqs",
                "summary": "viewAllFAQs"
            }
        },
        "/api/v1/admin/viewAllHalfTextImageData": {
            "get": {
                "tags": [
                    "Homepage"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "viewAllHalfTextImageData",
                "operationId": "viewallhalftextimagedata",
                "summary": "viewAllHalfTextImageData"
            }
        },
        "/api/v1/admin/viewAllItems": {
            "get": {
                "tags": [
                    "Gift Card & Guest Passes"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "viewAllItems",
                "operationId": "viewallitems",
                "summary": "viewAllItems"
            }
        },
        "/api/v1/admin/viewAllLegal": {
            "get": {
                "tags": [
                    "CMS"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "viewAllLegal",
                "operationId": "viewalllegal1",
                "summary": "viewAllLegal"
            }
        },
        "/api/v1/admin/viewAllMemberships": {
            "get": {
                "tags": [
                    "Membership"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "viewAllMemberships",
                "operationId": "viewallmemberships",
                "summary": "viewAllMemberships"
            }
        },
        "/api/v1/admin/viewAllTestimonials": {
            "get": {
                "tags": [
                    "Testimonial"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "viewAllTestimonials",
                "operationId": "viewalltestimonials",
                "summary": "viewAllTestimonials"
            }
        },
        "/api/v1/admin/viewContactUs": {
            "get": {
                "tags": [
                    "CMS"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "viewContactUs",
                "operationId": "viewcontactus",
                "summary": "viewContactUs"
            }
        },
        "/api/v1/admin/viewFAQ": {
            "get": {
                "tags": [
                    "CMS"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "viewFAQ",
                "operationId": "viewfaq",
                "summary": "viewFAQ"
            }
        },
        "/api/v1/admin/viewHalfTextImage": {
            "get": {
                "tags": [
                    "Homepage"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "/viewHalfTextImage",
                "operationId": "viewhalftextimage",
                "summary": "/viewHalfTextImage"
            }
        },
        "/api/v1/admin/viewHomePage": {
            "get": {
                "tags": [
                    "Homepage"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "viewHomePage",
                "operationId": "viewhomepage",
                "summary": "viewHomePage"
            }
        },
        "/api/v1/admin/viewItem": {
            "get": {
                "tags": [
                    "Gift Card & Guest Passes"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "viewItems",
                "operationId": "viewitems",
                "summary": "viewItems"
            }
        },
        "/api/v1/admin/viewLegal": {
            "get": {
                "tags": [
                    "CMS"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "viewLegal",
                "operationId": "viewlegal1",
                "summary": "viewLegal"
            }
        },
        "/api/v1/admin/viewSavedLocation": {
            "get": {
                "tags": [
                    "Nav Location"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "viewSavedLocation",
                "operationId": "viewsavedlocation",
                "summary": "viewSavedLocation"
            }
        },
        "/api/v1/admin/reorder": {
            "post": {
                "tags": [
                    "Reorder"
                ],
                "summary": "Reorder FAQs Category Legal",
                "description": "Reorder FAQ items in a collection.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization token",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Collection name and items to reorder",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/ReorderFAQ"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FAQs Reordered Successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/admin/listBlackListCards": {
            "get": {
                "tags": [
                    "Blacklist"
                ],
                "summary": "List Blacklisted Cards",
                "description": "Retrieve all blacklisted cards.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization token",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blacklisted Cards Fetched Successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/admin/addBlackListCard": {
            "post": {
                "tags": [
                    "Blacklist"
                ],
                "summary": "Add Blacklisted Card",
                "description": "Add a new card to the blacklist.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization token",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Card number to blacklist",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/AddBlackListCard"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blacklisted Card Saved Successfully!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/admin/viewTestimonial": {
            "get": {
                "tags": [
                    "Testimonial"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "viewTestimonial",
                "operationId": "viewtestimonial",
                "summary": "viewTestimonial"
            }
        },
        "/api/v1/admin/view_investors": {
            "get": {
                "tags": [
                    "Investors"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "view_investors",
                "operationId": "viewInvestors",
                "summary": "view_investors"
            }
        },
        "/api/v1/admin/view_updated_user_membership": {
            "get": {
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "user_membership_id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "view_updated_user_membership",
                "operationId": "viewUpdatedUserMembership",
                "summary": "view_updated_user_membership"
            }
        },
        "/api/v1/admin/view_user_membership": {
            "get": {
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "view_user_membership",
                "operationId": "viewUserMembership",
                "summary": "view_user_membership"
            }
        },
        "/api/v1/admin/getSelfSignature": {
            "get": {
                "tags": [
                    "CMS"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "subadmin_id": "type_of_content",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "getSelfSignature",
                "operationId": "getSelfSignature",
                "summary": "getSelfSignature"
            }
        },
        "/api/v1/admin/getWildduckAccessToken": {
            "get": {
                "tags": [
                    "CMS"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    }                    
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "getWildduckAccessToken",
                "operationId": "getWildduckAccessToken",
                "summary": "getWildduckAccessToken"
            }
        },
        "/api/v2/careers": {
            "get": {
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "job_type",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "job_location",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "category",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Website"
                ],
                "description": "careers",
                "operationId": "careers",
                "summary": "careers"
            }
        },
        "/api/v2/categoryList": {
            "get": {
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Website"
                ],
                "description": "categoryList",
                "operationId": "categorylist",
                "summary": "categoryList"
            }
        },
        "/api/v2/contact_us_list": {
            "get": {
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Website"
                ],
                "description": "contact_us_list",
                "operationId": "contactUsList",
                "summary": "contact_us_list"
            }
        },
        "/api/v2/createPayment": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "price": {
                                    "type": "string",
                                    "example": "500"
                                },
                                "currency": {
                                    "type": "string",
                                    "example": "USD"
                                },
                                "payment_method": {
                                    "type": "object",
                                    "description": "The payment method details",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "The type of payment method",
                                            "example": "card"
                                        },
                                        "card": {
                                            "type": "object",
                                            "description": "The card details",
                                            "properties": {
                                                "number": {
                                                    "type": "string",
                                                    "description": "The card number",
                                                    "example": "4012000300000088"
                                                },
                                                "expiry_month": {
                                                    "type": "string",
                                                    "description": "The expiry month of the card",
                                                    "example": "01"
                                                },
                                                "expiry_year": {
                                                    "type": "string",
                                                    "description": "The expiry year of the card",
                                                    "example": "2023"
                                                },
                                                "cvc": {
                                                    "type": "string",
                                                    "description": "The CVC of the card",
                                                    "example": "123"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "description": "The name on the card",
                                                    "example": "Adam"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful payment creation"
                    }
                },
                "description": "Endpoint to create a payment",
                "operationId": "createPayment",
                "summary": "Create a payment"
            }
        },
        "/api/v2/getFaqQuestions": {
            "get": {
                "tags": [
                    "CMS"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization",
                        "schema": {
                            "$ref": "#/components/Token"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "description": "getFaqQuestions",
                "operationId": "getfaqquestions",
                "summary": "getFaqQuestions"
            }
        },
        "/api/v2/get_all_category": {
            "get": {
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Website"
                ],
                "description": "/api/v2/get_all_category",
                "operationId": "ApiV2GetAllCategory",
                "summary": "/api/v2/get_all_category"
            }
        },
        "/api/v2/get_all_location": {
            "get": {
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Website"
                ],
                "description": "/api/v2/get_all_location",
                "operationId": "ApiV2GetAllLocation",
                "summary": "/api/v2/get_all_location"
            }
        },
        "/api/v2/get_career": {
            "get": {
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Website"
                ],
                "description": "get_career",
                "operationId": "getCareer",
                "summary": "get_career"
            }
        },
        "/api/v2/viewAllLegal": {
            "get": {
                "parameters": [
                    {
                        "in": "query",
                        "name": "skip",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Website"
                ],
                "description": "viewAllLegal",
                "operationId": "viewalllegal",
                "summary": "viewAllLegal"
            }
        },
        "/api/v2/viewLegal": {
            "get": {
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Website"
                ],
                "description": "viewLegal",
                "operationId": "viewlegal",
                "summary": "viewLegal"
            }
        },
        "/api/v2/viewMembership": {
            "get": {
                "parameters": [
                    {
                        "in": "query",
                        "name": "type",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Website"
                ],
                "description": "viewMembership",
                "operationId": "viewmembership",
                "summary": "viewMembership"
            }
        }
    },
    "components": {
        "veriffBody": {
            "required": [
                "type"
            ],
            "example": {
                "type": "DRIVERS_LICENSE"
            }
        },
        "updateDeviceToken": {
            "required": [
                "device_token",
                "device_type",
                "type"
            ],
            "example": {
                "device_token": "abc",
                "device_type": "ios",
                "type": "login"
            }
        },
        "rescheduleDeliveryTime": {
            "required": [
                "transaction_id",
                "delivery_date",
                "delivery_time"
            ],
            "example": {
                "transaction_id": "6627f62bc4d956a80d7361aa",
                "delivery_date": "2024-12-30",
                "delivery_time": "11:01"
            }
        },
        "emailInvoice": {
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "example": "658bb5b0209017e28e092b94"
        },
        "oneTimeInitiationPayment": {
            "optional": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "string"
                }
            },
            "example": {
                "status": "success"
            }
        },
        "send_referral": {
            "required": [
                "name",
                "phone_no",
                "phone_code"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "phone_no": {
                    "type": "string"
                },
                "phone_code": {
                    "type": "string"
                }
            },
            "example": {
                "name": "ANA",
                "phone_no": "8767687678",
                "phone_code": "+91"
            }
        },
        "automaticMailInvoice": {
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            },
            "example": {
                "email": "test@gmail.com"
            }
        },
        "purchaseGiftCard": {
            "required": [
                "giftcardName",
                "giftCard_id",
                "recipient_name",
                "recipient_number",
                "price"
            ],
            "optional": [
                "recipient_phone_code",
                "recipient_country_code",
                "recipient_message",
                "delivery_date",
                "delivery_time"
            ],
            "example": {
                "giftcardName": "6 month unlimited plan gift card",
                "recipient_name": "Anamika",
                "recipient_number": "8707280288",
                "recipient_message": "",
                "delivery_date": "2023-12-27",
                "delivery_time": "11:00",
                "price": "6000",
                "giftCard_id": "658ab0be08058dca7f9c5fb6",
                "recipient_country_code": "IN",
                "recipient_phone_code": "+91"
            }
        },
        "getHTMLContent": {
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string"
                }
            },
            "example": "Animal Policy"
        },
        "buyGuestPasses": {
            "required": [
                "boutique_id",
                "price"
            ],
            "properties": {
                "boutique_id": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                }
            },
            "example": {
                "boutique_id": "654ccf7250f4cf7fc839789c",
                "price": "6000"
            }
        },
        "AddContactUs": {
            "required": [
                "FullName",
                "email",
                "phone",
                "enquiry",
                "subject",
                "enquiryDetails"
            ],
            "properties": {
                "FullName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "enquiry": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "enquiryDetails": {
                    "type": "string"
                }
            },
            "example": {
                "FullName": "te st",
                "email": "test@gmail.com",
                "phone": "9632587410",
                "enquiry": "Investors",
                "subject": "test",
                "enquiryDetails": "gshshsjsi"
            }
        },
        "changePreference": {
            "optional": [
                "pushNotifications",
                "locationFeature",
                "SyncFlightWithCalendar",
                "displayPreferences",
                "automaticInvoiceToMail"
            ],
            "properties": {
                "pushNotifications": {
                    "type": "boolean"
                },
                "locationFeature": {
                    "type": "boolean"
                },
                "SyncFlightWithCalendar": {
                    "type": "boolean"
                },
                "automaticInvoiceToMail": {
                    "type": "boolean"
                },
                "displayPreferences": {
                    "type": "string"
                }
            },
            "example": {
                "pushNotifications": false,
                "locationFeature": true,
                "SyncFlightWithCalendar": true,
                "displayPreferences": "Dark",
                "automaticInvoiceToMail": true
            }
        },
        "Login": {
            "optional": [
                "email",
                "phone_code",
                "country_code",
                "phone"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "phone_code": {
                    "type": "string"
                },
                "country_code": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            },
            "example": {
                "phone": "4522555",
                "country_code": "AU",
                "phone_code": "+61",
                "email": ""
            }
        },
        "Token": {
            "required": [
                "Authorization"
            ],
            "properties": {
                "Authorization": {
                    "type": "string"
                }
            },
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywiaWF0IjoxNzA2MjgwMjg4LCJleHAiOjE3MDYzNjY2ODh9.F_dPJAybMJYmaFyRxwgBrHMjOv1BRPA5p1BS6p3_s6c"
        },
        "Search": {
            "required": [
                "search"
            ],
            "properties": {
                "search": {
                    "type": "string"
                }
            },
            "example": "XYZ"
        },
        "VerifyOTP": {
            "required": [
                "otp",
                "firebase_device_token"
            ],
            "properties": {
                "otp": {
                    "type": "string"
                },
                "firebase_device_token": {
                    "type": "string"
                }
            },
            "example": {
                "otp": "123456",
                "firebase_device_token": "deviceToken"
            }
        },
        "AddInformation": {
            "required": [
                "fullName",
                "gender",
                "birthday"
            ],
            "optional": [
                "preferredFirstName"
            ],
            "properties": {
                "fullName": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "birthday": {
                    "type": "string"
                },
                "preferredFirstName": {
                    "type": "string"
                }
            },
            "example": {
                "fullName": "Anamika Gautam",
                "preferredFirstName": "Anamika",
                "gender": "F",
                "birthday": "1999-10-08"
            }
        },
        "CompletionOfRegistration": {
            "optional": [
                "occupation",
                "annual_income",
                "industries"
            ],
            "properties": {
                "occupation": {
                    "type": "string"
                },
                "annual_income": {
                    "type": "string"
                },
                "industries": {
                    "type": "array"
                }
            },
            "example": {
                "occupation": "Engineer",
                "annual_income": "2000",
                "industries": [
                    "65361cec5d651b6026e13deb",
                    "demo"
                ]
            }
        },
        "AddEmail": {
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            },
            "example": {
                "email": "noreply@gmail.com"
            }
        },
        "update_phone": {
            "required": [
                "phone",
                "country_code",
                "phone_code",
                "otp"
            ],
            "properties": {
                "phone": {
                    "type": "string"
                },
                "country_code": {
                    "type": "string"
                },
                "phone_code": {
                    "type": "string"
                },
                "otp": {
                    "type": "string"
                }
            },
            "example": {
                "phone": "666666668",
                "country_code": "IN",
                "phone_code": "+91",
                "otp": "123456"
            }
        },
        "updateName": {
            "optional": [
                "legal_full_name",
                "preferred_first_name"
            ],
            "properties": {
                "legal_full_name": {
                    "type": "string"
                },
                "preferred_first_name": {
                    "type": "string"
                }
            },
            "example": {
                "legal_full_name": "Anamika Gautam",
                "preferred_first_name": "Anamika"
            }
        },
        "userId": {
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "example": "65734bfcf899df88a5190f68"
        },
        "email": {
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            },
            "example": "test@yopmail.com"
        },
        "editEmail": {
            "optional": [
                "email",
                "otp"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "otp": {
                    "type": "string"
                }
            },
            "example": {
                "email": "test@gmail.com",
                "otp": "123456"
            }
        },
        "addSpecialNeedsAndConditions": {
            "optional": [
                "blind",
                "deaf",
                "development_intellectual_disability",
                "lap_held_infant_under_2_years",
                "pregnant_30_weeks_or_less",
                "pregnant_30_weeks_or_more",
                "reduced_mobility",
                "medical_condition",
                "others",
                "medical_conditions_details",
                "others_details",
                "name_of_infant",
                "birthday_of_infant",
                "proof_of_age",
                "photo_of_infant",
                "capable_of_brief_walks",
                "reduced_mobility_details"
            ],
            "properties": {
                "blind": {
                    "type": "boolean"
                },
                "deaf": {
                    "type": "boolean"
                },
                "development_intellectual_disability": {
                    "type": "boolean"
                },
                "lap_held_infant_under_2_years": {
                    "type": "boolean"
                },
                "pregnant_30_weeks_or_less": {
                    "type": "boolean"
                },
                "pregnant_30_weeks_or_more": {
                    "type": "boolean"
                },
                "reduced_mobility": {
                    "type": "boolean"
                },
                "medical_condition": {
                    "type": "boolean"
                },
                "others": {
                    "type": "boolean"
                },
                "medical_conditions_details": {
                    "type": "string"
                },
                "others_details": {
                    "type": "string"
                },
                "name_of_infant": {
                    "type": "string"
                },
                "proof_of_age": {
                    "type": "string"
                },
                "photo_of_infant": {
                    "type": "string"
                },
                "reduced_mobility_details": {
                    "type": "string"
                },
                "birthday_of_infant": {
                    "type": "string"
                },
                "capable_of_brief_walks": {
                    "type": "boolean"
                }
            },
            "example": {
                "blind": false,
                "deaf": false,
                "development_intellectual_disability": false,
                "lap_held_infant_under_2_years": false,
                "pregnant_30_weeks_or_less": false,
                "pregnant_30_weeks_or_more": false,
                "reduced_mobility": false,
                "medical_condition": false,
                "others": false,
                "medical_conditions_details": "",
                "others_details": "",
                "name_of_infant": "",
                "birthday_of_infant": "2024-01-03T11:30:54.146Z",
                "proof_of_age": "",
                "photo_of_infant": "",
                "capable_of_brief_walks": false,
                "reduced_mobility_details": ""
            }
        },
        "DOB": {
            "required": [
                "DOB"
            ],
            "properties": {
                "DOB": {
                    "type": "date"
                }
            },
            "example": "1999-89-09"
        },
        "veriffWebhook": {
            "example": {
                "status": "success",
                "verification": {
                    "id": "65176b0b-9342-4e52-bd20-368fca17fd8b",
                    "code": 9001,
                    "person": {
                        "gender": null,
                        "idNumber": null,
                        "lastName": null,
                        "firstName": "Aditya Rajput",
                        "citizenship": null,
                        "dateOfBirth": "1995-01-01",
                        "nationality": null,
                        "yearOfBirth": null,
                        "placeOfBirth": null,
                        "pepSanctionMatch": null
                    },
                    "reason": null,
                    "status": "approved",
                    "comments": [],
                    "document": {
                        "type": "DRIVERS_LICENSE",
                        "number": null,
                        "country": null,
                        "validFrom": null,
                        "validUntil": null
                    },
                    "reasonCode": null,
                    "vendorData": "661f6918ff33ad7b5d7da9e4 PASSPORT",
                    "decisionTime": "2024-04-12T07:34:31.865830Z",
                    "acceptanceTime": "2024-04-12T07:33:50.085173Z",
                    "additionalVerifiedData": {}
                },
                "technicalData": {
                    "ip": null
                }
            }
        },
        "veriff": {
            "example": "a7b98ef83524e0ec589efc613adb9d282b6b406e539c8c9d8d4c81b945d3d2cc"
        },
        "AddMembership": {
            "required": [
                "name",
                "price",
                "membership_id"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                },
                "membership_id": {
                    "type": "string"
                }
            },
            "example": {
                "name": "Unlimited Plan Membership",
                "price": "3000",
                "membership_id": "654b3610d8a13175f8f349d6"
            }
        },
        "confirmUpgradeAndPurchase": {
            "required": [
                "prarataDiff",
                "price",
                "membership_id"
            ],
            "properties": {
                "prarataDiff": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                },
                "membership_id": {
                    "type": "string"
                }
            },
            "example": {
                "prarataDiff": "8000",
                "price": "3000",
                "membership_id": "654b3610d8a13175f8f349d6"
            }
        },
        "downgradeMembership": {
            "required": [
                "price",
                "membership_id"
            ],
            "properties": {
                "price": {
                    "type": "string"
                },
                "membership_id": {
                    "type": "string"
                }
            },
            "example": {
                "price": "3000",
                "membership_id": "654b3610d8a13175f8f349d6"
            }
        },
        "cancelMembership": {
            "required": [
                "status",
                "membership_id"
            ],
            "properties": {
                "status": {
                    "type": "string"
                },
                "membership_id": {
                    "type": "string"
                }
            },
            "example": {
                "status": "active",
                "membership_id": "654b3610d8a13175f8f349d6"
            }
        },
        "changeRenewalDay": {
            "required": [
                "changeRenewalDay",
                "day"
            ],
            "properties": {
                "changeRenewalDay": {
                    "type": "string"
                },
                "day": {
                    "type": "string"
                }
            },
            "example": {
                "day": "01",
                "membership_id": "6554c28888ffa1b5fe16436f"
            }
        },
        "changeRenewalDayConfirmPay": {
            "required": [
                "membership_id",
                "additional_charges",
                "new_renewable_date"
            ],
            "properties": {
                "membership_id": {
                    "type": "string"
                },
                "additional_charges": {
                    "type": "string"
                },
                "new_renewable_date": {
                    "type": "date"
                }
            },
            "example": {
                "additional_charges": "4965.52",
                "membership_id": "654b3610d8a13175f8f349d6",
                "new_renewable_date": "2024-11-05T11:22:06.290Z"
            }
        },
        "terminateMembership": {
            "required": [
                "membership_id"
            ],
            "properties": {
                "membership_id": {
                    "type": "string"
                }
            },
            "example": {
                "membership_id": "654b3610d8a13175f8f349d6"
            }
        },
        "updateSafetyVideoWatchStatus": {
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "boolean"
                }
            },
            "example": {
                "status": "true"
            }
        },
        "check_booking_status": {
            "required": [
                "booking_id"
            ],
            "properties": {
                "booking_id": {
                    "type": "string"
                }
            },
            "example": "65734bfcf899df88a5190f68"
        },
        "show_profile": {
            "required": [
                "is_show"
            ],
            "properties": {
                "is_show": {
                    "type": "string"
                }
            },
            "example": "yes"
        },
        "snooze_for_1hr": {
            "optional": [
                "snooze_for_1hr"
            ],
            "properties": {
                "snooze_for_1hr": {
                    "type": "string"
                }
            },
            "example": "yes"
        },
        "delete_forever": {
            "optional": [
                "delete_forever"
            ],
            "properties": {
                "delete_forever": {
                    "type": "string"
                }
            },
            "example": "yes"
        },
        "snooze_for_24hr": {
            "optional": [
                "snooze_for_24hr"
            ],
            "properties": {
                "snooze_for_24hr": {
                    "type": "string"
                }
            },
            "example": "yes"
        },
        "membership_id": {
            "optional": [
                "membership_id"
            ],
            "properties": {
                "membership_id": {
                    "type": "string"
                }
            },
            "example": "6593e449e73269e70912145c"
        },
        "payment_id": {
            "optional": [
                "payment_id"
            ],
            "properties": {
                "payment_id": {
                    "type": "string"
                }
            },
            "example": "6593e449e73269e70912145c"
        },
        "boutique_id": {
            "optional": [
                "boutique_id"
            ],
            "properties": {
                "boutique_id": {
                    "type": "string"
                }
            },
            "example": "6593e449e73269e70912145c"
        },
        "survey_id": {
            "optional": [
                "survey_id"
            ],
            "properties": {
                "survey_id": {
                    "type": "string"
                }
            },
            "example": "6593e449e73269e70912145c"
        },
        "announcement_id": {
            "optional": [
                "announcement_id"
            ],
            "properties": {
                "announcement_id": {
                    "type": "string"
                }
            },
            "example": "6593e449e73269e70912145c"
        },
        "show_profile_card": {
            "optional": [
                "show_profile_card"
            ],
            "properties": {
                "show_profile_card": {
                    "type": "string"
                }
            },
            "example": "yes"
        },
        "submitSurvey": {
            "required": [
                "survey_id",
                "user_answer"
            ],
            "properties": {
                "survey_id": {
                    "type": "string"
                },
                "user_answer": {
                    "type": "array"
                }
            },
            "example": {
                "survey_id": "65ca0a225ba0296177efccdf",
                "user_answer": [
                    1
                ]
            }
        },
        "addPayment": {
            "required": [
                "paymentMethod",
                "cardholderName",
                "cardNumber",
                "cardType",
                "expiry",
                "cvv",
                "billingAddress"
            ],
            "optional": [
                "is_website",
                "abn",
                "business_name"
            ],
            "properties": {
                "paymentMethod": {
                    "type": "string"
                },
                "cardholderName": {
                    "type": "string"
                },
                "cardNumber": {
                    "type": "string"
                },
                "cardType": {
                    "type": "string"
                },
                "expiry": {
                    "type": "string"
                },
                "cvv": {
                    "type": "array"
                },
                "billingAddress": {
                    "type": "object"
                },
                "is_website": {
                    "type": "boolean"
                },
                "abn": {
                    "type": "string"
                },
                "business_name": {
                    "type": "string"
                }
            },
            "example": {
                "paymentMethod": "664c443943b7782c349c1813",
                "cardholderName": "John Doe",
                "cardNumber": "4111111111111111",
                "cardType": "visa",
                "expiry": "12/25",
                "cvv": "123",
                "billingAddress": {
                    "streetAddress": "Delhi",
                    "city": "Delhi",
                    "state": "Delhi",
                    "postCode": "737637",
                    "country": "Australia"
                },
                "businessName": "YUI",
                "abn": "tyuik"
            }
        },
        "id": {
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "example": "65ca0a225ba0296177efccdf"
        },
        "editPayment": {
            "optional": [
                "paymentMethod",
                "cardholderName",
                "cardNumber",
                "expiry",
                "cvv",
                "billingAddress"
            ],
            "required": [
                "payment_id"
            ],
            "properties": {
                "payment_id": {
                    "type": "string"
                },
                "paymentMethod": {
                    "type": "string"
                },
                "cardholderName": {
                    "type": "string"
                },
                "expiry": {
                    "type": "string"
                },
                "cvv": {
                    "type": "array"
                },
                "billingAddress": {
                    "type": "object"
                },
                "is_website": {
                    "type": "boolean"
                },
                "abn": {
                    "type": "string"
                },
                "business_name": {
                    "type": "string"
                }
            },
            "example": {
                "payment_id": "664dc47a6bde39558b112d00",
                "paymentMethod": "664c443943b7782c349c1813",
                "cardholderName": "John",
                "expiry": "12/40",
                "cvv": "123",
                "billingAddress": {
                    "streetAddress": "up",
                    "city": "Delhi",
                    "state": "Delhi",
                    "postCode": "737637",
                    "country": "Australia"
                },
                "businessName": "uiwebfuwfenfuw",
                "abn": "tyuik"
            }
        },
        "latitude": {
            "example": "90"
        },
        "get_flights": {
            "required": [
                "first_date",
                "leaving_from",
                "arriving_at"
            ],
            "optional": [
                "second_date"
            ],
            "properties": {
                "first_date": {
                    "type": "date"
                },
                "leaving_from": {
                    "type": "string"
                },
                "arriving_at": {
                    "type": "string"
                },
                "second_date": {
                    "type": "date"
                }
            },
            "example": {
                "first_date": "2024-04-27",
                "leaving_from": "6596618ab2e91dee922e0d97",
                "arriving_at": "659661eeb2e91dee922e0d9a",
                "second_date": "2024-04-25"
            }
        },
        "booking": {
            "required": [
                "flight_id",
                "is_booking_confirmed",
                "is_member_seat",
                "is_only_guest_seat",
                "is_only_pet_seat",
                "is_guest_and_pet_seat",
                "is_pet_on_lap",
                "pet_pass_used"
            ],
            "optional": [
                "Total_pet_price_with_gst",
                "Sflight_id",
                "Sis_booking_confirmed",
                "Sis_member_seat",
                "Sis_only_guest_seat",
                "Sis_only_pet_seat",
                "Sis_guest_and_pet_seat",
                "Sis_pet_on_lap"
            ],
            "properties": {
                "flight_id": {
                    "type": "date"
                },
                "is_booking_confirmed": {
                    "type": "boolean"
                },
                "is_member_seat": {
                    "type": "boolean"
                },
                "is_only_guest_seat": {
                    "type": "boolean"
                },
                "is_only_pet_seat": {
                    "type": "boolean"
                },
                "is_guest_and_pet_seat": {
                    "type": "boolean"
                },
                "is_pet_on_lap": {
                    "type": "boolean"
                },
                "pet_pass_used": {
                    "type": "string"
                },
                "Total_pet_price_with_gst": {
                    "type": "string"
                },
                "Sflight_id": {
                    "type": "string"
                },
                "Sis_booking_confirmed": {
                    "type": "boolean"
                },
                "Sis_member_seat": {
                    "type": "boolean"
                },
                "Sis_only_guest_seat": {
                    "type": "boolean"
                },
                "Sis_only_pet_seat": {
                    "type": "boolean"
                },
                "Sis_guest_and_pet_seat": {
                    "type": "boolean"
                },
                "Sis_pet_on_lap": {
                    "type": "boolean"
                }
            },
            "example": {
                "flight_id": "65ef40383f022cab0d20d03b",
                "is_booking_confirmed": true,
                "is_member_seat": true,
                "is_only_guest_seat": false,
                "is_only_pet_seat": false,
                "is_guest_and_pet_seat": false,
                "is_pet_on_lap": false,
                "pet_pass_used": "0",
                "Total_pet_price_with_gst": "277",
                "Sflight_id": "65efef203f022cab0d20e60e",
                "Sis_booking_confirmed": true,
                "Sis_member_seat": true,
                "Sis_only_guest_seat": false,
                "Sis_only_pet_seat": false,
                "Sis_guest_and_pet_seat": false,
                "Sis_pet_on_lap": false
            }
        },
        "flight_id": {
            "required": [
                "flight_id"
            ],
            "properties": {
                "flight_id": {
                    "type": "string"
                }
            },
            "example": "6596618ab2e91dee922e0d97"
        },
        "Sflight_id": {
            "optional": [
                "Sflight_id"
            ],
            "properties": {
                "Sflight_id": {
                    "type": "string"
                }
            },
            "example": "6596618ab2e91dee922e0d97"
        },
        "second_flight_id": {
            "optional": [
                "second_flight_id"
            ],
            "properties": {
                "second_flight_id": {
                    "type": "string"
                }
            },
            "example": "6596618ab2e91dee922e0d97"
        },
        "add_guest": {
            "required": [
                "guest_name",
                "guest_phone_code",
                "guest_phone"
            ],
            "optional": [
                "booking_id"
            ],
            "properties": {
                "booking_id": {
                    "type": "string"
                },
                "guest_name": {
                    "type": "string"
                },
                "guest_phone_code": {
                    "type": "string"
                },
                "guest_phone": {
                    "type": "string"
                }
            },
            "example": {
                "guest_name": "Anamika Gautam",
                "guest_phone_code": "+91",
                "guest_phone": "8787058648",
                "booking_id": "6596618ab2e91dee922e0d97"
            }
        },
        "remove_guest": {
            "required": [
                "guest_id",
                "flight_id"
            ],
            "optional": [
                "booking_id"
            ],
            "properties": {
                "booking_id": {
                    "type": "string"
                },
                "guest_id": {
                    "type": "string"
                },
                "flight_id": {
                    "type": "string"
                }
            },
            "example": {
                "guest_id": "6596618ab2e91dee922e0d97",
                "flight_id": "6596618ab2e91dee922e0d97",
                "booking_id": "6596618ab2e91dee922e0d97"
            }
        },
        "search": {
            "required": [
                "search"
            ],
            "properties": {
                "search": {
                    "type": "string"
                }
            },
            "example": "aki"
        },
        "pet_type": {
            "required": [
                "pet_type"
            ],
            "properties": {
                "pet_type": {
                    "type": "string"
                }
            },
            "example": "Dog"
        },
        "add_pet": {
            "example": {
                "pet_profile_pic": "https://bkjt-test-storage.s3.ap-southeast-2.amazonaws.com/1701247232056_image_cropper_1701247225245.jpg",
                "pet_type": "Dog",
                "pet_name": "Anamika pet",
                "pet_breed": [
                    "653a5020bc2bb23f8809bf97"
                ],
                "age": "7",
                "gender": "F",
                "pet_liability_signature": "iVBORw0KGgoAAAANSUhEUgAAA9QAAAFzCAYAAADfUkH7AAAAAXNSR0IArs4c6QAAAARzQklUCAgICHwIZIgAACAASURBVHic7d15nGxlfSf+73HMzGXfBEFEEFxAQAEjjjvGfVlW1X/WrhT+yqm5dVQdU1azvTf2V6m/TdXz1t+06v6rO7rruhzM+LgAAU6ZQAyyQZN/qS/Ydq7/d1Q5VdciCT7mqqk6v/p7V36l+RHk5J3ddd+WUowIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDG8v8DHzYHZjfA13UAAAAASUVORK5CYII=",
                "pet_weight": "5",
                "assistance_animal_proof": "",
                "bio": "Hello"
            }
        },
        "edit_pet": {
            "example": {
                "pet_profile_pic": "https://bkjt-test-storage.s3.ap-southeast-2.amazonaws.com/1701247232056_image_cropper_1701247225245.jpg",
                "pet_type": "Dog",
                "pet_name": "Anamika pet",
                "pet_breed": [
                    "653a5020bc2bb23f8809bf97"
                ],
                "age": "7",
                "gender": "F",
                "pet_liability_signature": "iVBORw0KGgoAAAANSUhEUgAAA9QAAAFzCAYAAADfUkH7AAAAAXNSR0IArs4c6QAAAARzQklUCAgICHwIZIgAACAASURBVHic7d15nGxlfSf+73HMzGXfBEFEEFxAQAEjjjvGfVlW1X/WrhT+yqm5dVQdU1azvTf2V6m/TdXz1t+06v6rO7rruhzM+LgAAU6ZQAyyQZN/qS/Ydq7/d1Q5VdciCT7mqqk6v/p7V36l+RHk5J3ddd+WUowIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDG8v8DHzYHZjfA13UAAAAASUVORK5CYII=",
                "pet_weight": "5",
                "assistance_animal_proof": "",
                "bio": "Hello",
                "pet_id": "653a5020bc2bb23f8809bf97"
            }
        },
        "lock_seat": {
            "required": [
                "add_seat_no",
                "remove_seat_no",
                "flight_id"
            ],
            "optional": [
                "guest_id",
                "pet_id"
            ],
            "properties": {
                "add_seat_no": {
                    "type": "string"
                },
                "remove_seat_no": {
                    "type": "string"
                },
                "flight_id": {
                    "type": "string"
                },
                "guest_id": {
                    "type": "string"
                },
                "pet_id": {
                    "type": "array"
                }
            },
            "example": {
                "add_seat_no": "2",
                "remove_seat_no": "0",
                "flight_id": "65ef40483f022cab0d20d085",
                "guest_id": "6596618ab2e91dee922e0d97",
                "pet_id": [
                    "653a5020bc2bb23f8809bf97"
                ]
            }
        },
        "get_pet_data": {
            "required": [
                "pet_ids"
            ],
            "properties": {
                "pet_ids": {
                    "type": "array"
                }
            },
            "example": {
                "pet_ids": [
                    "6618d0061a5858991cae4e62",
                    "6618d6ce9045fd2b6b8d2a2d"
                ]
            }
        },
        "pet_id": {
            "required": [
                "pet_id"
            ],
            "properties": {
                "pet_id": {
                    "type": "string"
                }
            },
            "example": "6618d0061a5858991cae4e62"
        },
        "booking_id": {
            "required": [
                "booking_id"
            ],
            "properties": {
                "booking_id": {
                    "type": "string"
                }
            },
            "example": "6596618ab2e91dee922e0d97"
        },
        "second_booking_id": {
            "optional": [
                "second_booking_id"
            ],
            "properties": {
                "second_booking_id": {
                    "type": "string"
                }
            },
            "example": "6596618ab2e91dee922e0d97"
        },
        "type": {
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string"
                }
            },
            "example": "1/2"
        },
        "Optionalbooking_id": {
            "optional": [
                "booking_id"
            ],
            "properties": {
                "booking_id": {
                    "type": "string"
                }
            },
            "example": "3456sdf45tfg7uyghujh"
        },
        "user_id": {
            "required": [
                "user_id"
            ],
            "properties": {
                "user_id": {
                    "type": "string"
                }
            },
            "example": "6596618ab2e91dee922e0d97"
        },
        "guest_id": {
            "required": [
                "guest_id"
            ],
            "properties": {
                "guest_id": {
                    "type": "string"
                }
            },
            "example": "6596618ab2e91dee922e0d97"
        },
        "confirm": {
            "required": [
                "confirm"
            ],
            "properties": {
                "confirm": {
                    "type": "number"
                }
            },
            "example": "1"
        },
        "skip": {
            "optional": [
                "skip"
            ],
            "properties": {
                "skip": {
                    "type": "number"
                }
            },
            "example": "1"
        },
        "limit": {
            "optional": [
                "limit"
            ],
            "properties": {
                "limit": {
                    "type": "number"
                }
            },
            "example": "10"
        },
        "booking_status": {
            "required": [
                "booking_status"
            ],
            "properties": {
                "booking_status": {
                    "type": "string"
                }
            },
            "example": "pending/confirmed/canceled/purchase-pending"
        },
        "pet_on_board_member_decision": {
            "required": [
                "flight_id",
                "member_response",
                "requested_id",
                "booking_id"
            ],
            "properties": {
                "flight_id": {
                    "type": "string"
                },
                "requested_id": {
                    "type": "string"
                },
                "booking_id": {
                    "type": "string"
                },
                "member_response": {
                    "type": "number"
                }
            },
            "example": {
                "flight_id": "655dcd17389fff7bb03cc9a4",
                "member_response": 0,
                "requested_id": "6549f404cc109098db8e6ea6",
                "booking_id": "6565c38af9c78bd6c76cc71f"
            }
        },
        "cancelBooking": {
            "required": [
                "cancel_all",
                "id"
            ],
            "optional": [
                "canceled_seat_nos",
                "guest_id"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "cancel_all": {
                    "type": "string"
                },
                "canceled_seat_nos": {
                    "type": "array"
                },
                "guest_id": {
                    "type": "string"
                }
            },
            "example": {
                "id": "66264d5e3da1bea2bcebebe6",
                "cancel_all": "yes",
                "canceled_seat_nos": [
                    "5"
                ],
                "guest_id": "65c60dcb43e10ea235b11e58"
            }
        },
        "edit_seat": {
            "required": [
                "add_seat_no",
                "remove_seat_no",
                "flight_id",
                "booking_id"
            ],
            "optional": [
                "guest_id",
                "pet_id"
            ],
            "properties": {
                "add_seat_no": {
                    "type": "string"
                },
                "remove_seat_no": {
                    "type": "string"
                },
                "flight_id": {
                    "type": "string"
                },
                "booking_id": {
                    "type": "string"
                },
                "guest_id": {
                    "type": "string"
                },
                "pet_id": {
                    "type": "array"
                }
            },
            "example": {
                "add_seat_no": "1",
                "remove_seat_no": "2",
                "flight_id": "659f8814985fe42ffe8b9b08",
                "booking_id": "659f8ca65538b2ac2c87732a",
                "guest_id": "655de6c3c7dc2310a5690dfa",
                "pet_id": [
                    "659be234270f837838b158da"
                ]
            }
        },
        "confirmEditSeat": {
            "required": [
                "flight_id"
            ],
            "optional": [
                "add_seat_no",
                "remove_seat_no",
                "booking_id",
                "pet_id",
                "canceled_seat_nos"
            ],
            "properties": {
                "add_seat_no": {
                    "type": "array"
                },
                "remove_seat_no": {
                    "type": "array"
                },
                "flight_id": {
                    "type": "string"
                },
                "booking_id": {
                    "type": "string"
                },
                "canceled_seat_nos": {
                    "type": "array"
                },
                "pet_id": {
                    "type": "array"
                }
            },
            "example": {
                "add_seat_no": [
                    {
                        "user_id": "6618ceed1a5858991cae4e3c",
                        "seat_no": "4",
                        "isNew": true,
                        "petOnLap": true,
                        "pet_id": [
                            "661d63adcccdb3ed1c254e6d"
                        ],
                        "guest_id": "661d63adcccdb3ed1c254e6d"
                    }
                ],
                "remove_seat_no": [
                    "1"
                ],
                "flight_id": "6614dcaff34cbeb11c490fed",
                "pet_id": [
                    "6618d6ce9045fd2b6b8d2a2d"
                ],
                "booking_id": "661d63adcccdb3ed1c254e6d",
                "canceled_seat_nos": [
                    "3",
                    "6"
                ]
            }
        },
        "purchaseResetVoucher": {
            "required": [
                "id",
                "count"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "count": {
                    "type": "string"
                }
            },
            "example": {
                "id": "65a1125922075dbb1003747d",
                "count": "5"
            }
        },
        "reset_passes": {
            "required": [
                "id"
            ],
            "optional": [
                "reset_pet_pass",
                "reset_guest_pass",
                "reset_reusable_booking",
                "total_reset_voucher",
                "all_reset"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "reset_pet_pass": {
                    "type": "number"
                },
                "reset_guest_pass": {
                    "type": "number"
                },
                "reset_reusable_booking": {
                    "type": "number"
                },
                "total_reset_voucher": {
                    "type": "number"
                },
                "all_reset": {
                    "type": "boolean"
                }
            },
            "example": {
                "id": "65f2e305213b8b7923f07670",
                "reset_pet_pass": 0,
                "reset_reusable_booking": 0,
                "reset_guest_pass": 1,
                "total_reset_voucher": 1,
                "all_reset": false
            }
        },
        "getBook_another_flights": {
            "required": [
                "canceled_flight_id",
                "total_seats_wanted",
                "with_pet"
            ],
            "properties": {
                "canceled_flight_id": {
                    "type": "string"
                },
                "total_seats_wanted": {
                    "type": "number"
                },
                "with_pet": {
                    "type": "boolean"
                }
            },
            "example": {
                "canceled_flight_id": "65efef203f022cab0d20e617",
                "total_seats_wanted": "5",
                "with_pet": false
            }
        },
        "edit_guest": {
            "optional": [
                "guest_name",
                "guest_phone_code",
                "guest_phone"
            ],
            "required": [
                "guest_id"
            ],
            "properties": {
                "guest_name": {
                    "type": "string"
                },
                "guest_phone_code": {
                    "type": "string"
                },
                "guest_phone": {
                    "type": "string"
                },
                "guest_id": {
                    "type": "string"
                }
            },
            "example": {
                "guest_name": "Sakshi",
                "guest_phone_code": "+91",
                "guest_phone": "8787058645",
                "guest_id": "65cb096cc84cdb8e1219333c"
            }
        },
        "AddBlackListCard": {
            "type": "object",
            "properties": {
                "cardNumber": {
                    "type": "string",
                    "description": "Card number to blacklist"
                }
            },
            "example": {
                "cardNumber": "5111111111111118"
            }
        },
        "ReorderFAQ": {
            "type": "object",
            "properties": {
                "collectionName": {
                    "type": "string",
                    "description": "Name of the collection",
                    "enum": [
                        "legal",
                        "category",
                        "faq"
                    ]
                },
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "_id": {
                                "type": "string",
                                "description": "Item ID"
                            }
                        }
                    }
                }
            },
            "example": {
                "collectionName": "faq",
                "items": [
                    {
                        "_id": "6643354a072539d1e0a6b3b3"
                    },
                    {
                        "_id": "66433535072539d1e0a6b3a3"
                    },
                    {
                        "_id": "6643355e072539d1e0a6b3c2"
                    }
                ]
            }
        }
    }
}